{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/DemoPages/Dashboards/analytics/analytics.component.html","webpack:///./src/app/DemoPages/Dashboards/analytics/analytics.component.ts","webpack:///./src/app/DemoPages/Dashboards/charts/active-actual-vs-active-prediction/active-actual-vs-active-prediction.component.html","webpack:///./src/app/DemoPages/Dashboards/charts/active-actual-vs-active-prediction/active-actual-vs-active-prediction.component.sass","webpack:///./src/app/DemoPages/Dashboards/charts/active-actual-vs-active-prediction/active-actual-vs-active-prediction.component.ts","webpack:///./src/app/DemoPages/Dashboards/charts/confirmed-actual-vs-confirmed-predictions/confirmed-actual-vs-confirmed-predictions.component.html","webpack:///./src/app/DemoPages/Dashboards/charts/confirmed-actual-vs-confirmed-predictions/confirmed-actual-vs-confirmed-predictions.component.sass","webpack:///./src/app/DemoPages/Dashboards/charts/confirmed-actual-vs-confirmed-predictions/confirmed-actual-vs-confirmed-predictions.component.ts","webpack:///./src/app/DemoPages/Dashboards/charts/confirmed-actual-vs-death-actual/confirmed-actual-vs-death-actual.component.html","webpack:///./src/app/DemoPages/Dashboards/charts/confirmed-actual-vs-death-actual/confirmed-actual-vs-death-actual.component.sass","webpack:///./src/app/DemoPages/Dashboards/charts/confirmed-actual-vs-death-actual/confirmed-actual-vs-death-actual.component.ts","webpack:///./src/app/DemoPages/Dashboards/charts/death-actual-vs-death-prediction/death-actual-vs-death-prediction.component.html","webpack:///./src/app/DemoPages/Dashboards/charts/death-actual-vs-death-prediction/death-actual-vs-death-prediction.component.sass","webpack:///./src/app/DemoPages/Dashboards/charts/death-actual-vs-death-prediction/death-actual-vs-death-prediction.component.ts","webpack:///./src/app/DemoPages/Dashboards/charts/recovery-actual-vs-recovery-prediction/recovery-actual-vs-recovery-prediction.component.html","webpack:///./src/app/DemoPages/Dashboards/charts/recovery-actual-vs-recovery-prediction/recovery-actual-vs-recovery-prediction.component.sass","webpack:///./src/app/DemoPages/Dashboards/charts/recovery-actual-vs-recovery-prediction/recovery-actual-vs-recovery-prediction.component.ts","webpack:///./src/app/DemoPages/Dashboards/charts/top-three-countries-confirmed-cases/top-three-countries-confirmed-cases.component.html","webpack:///./src/app/DemoPages/Dashboards/charts/top-three-countries-confirmed-cases/top-three-countries-confirmed-cases.component.sass","webpack:///./src/app/DemoPages/Dashboards/charts/top-three-countries-confirmed-cases/top-three-countries-confirmed-cases.component.ts","webpack:///./src/app/Layout/Components/footer/footer.component.html","webpack:///./src/app/Layout/Components/footer/footer.component.ts","webpack:///./src/app/Layout/Components/header/elements/search-box/search-box.component.html","webpack:///./src/app/Layout/Components/header/elements/search-box/search-box.component.ts","webpack:///./src/app/Layout/Components/header/elements/user-box/user-box.component.html","webpack:///./src/app/Layout/Components/header/elements/user-box/user-box.component.ts","webpack:///./src/app/Layout/Components/header/header.component.html","webpack:///./src/app/Layout/Components/header/header.component.ts","webpack:///./src/app/Layout/Components/page-title/page-title.component.html","webpack:///./src/app/Layout/Components/page-title/page-title.component.ts","webpack:///./src/app/Layout/Components/sidebar/elements/logo/logo.component.html","webpack:///./src/app/Layout/Components/sidebar/elements/logo/logo.component.ts","webpack:///./src/app/Layout/Components/sidebar/sidebar.component.html","webpack:///./src/app/Layout/Components/sidebar/sidebar.component.ts","webpack:///./src/app/Layout/base-layout/base-layout.component.html","webpack:///./src/app/Layout/base-layout/base-layout.component.ts","webpack:///./src/app/Layout/pages-layout/pages-layout.component.html","webpack:///./src/app/Layout/pages-layout/pages-layout.component.ts","webpack:///./src/app/ThemeOptions/store/config.actions.ts","webpack:///./src/app/ThemeOptions/store/config.reducer.ts","webpack:///./src/app/ThemeOptions/store/index.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/constants/global-enums.ts","webpack:///./src/app/services/common.service.ts","webpack:///./src/app/theme-options.ts","webpack:///./src/data/predictions lazy ^\\.\\/.*\\/active\\-data\\.json$ namespace object","webpack:///./src/data/predictions lazy ^\\.\\/.*\\/confirmed\\-data\\.json$ namespace object","webpack:///./src/data/predictions lazy ^\\.\\/.*\\/death\\-data\\.json$ namespace object","webpack:///./src/data/predictions lazy ^\\.\\/.*\\/recovery\\-data\\.json$ namespace object","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,8dAA8d,iCAAiC,WAAW,gBAAgB,GAAG,0uBAA0uB,cAAc,8gBAA8gB,4BAA4B,0PAA0P,+DAA+D,kqBAAkqB,+BAA+B,0PAA0P,kEAAkE,uqBAAuqB,8BAA8B,gSAAgS,sEAAsE,6pBAA6pB,0BAA0B,uRAAuR,kEAAkE,gVAAgV,cAAc,61BAA61B,cAAc,0dAA0d,cAAc,gYAAgY,cAAc,seAAse,cAAc,2YAA2Y,cAAc,yP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1kQ;AAEe;AACE;AACD;AACM;AACN;AACK;AACF;AAMrE;IAcE,4BACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAX/B,gBAAW,GAAG,UAAU,CAAC;QACzB,kBAAa,GAAG,6DAAa,CAAC;QAYnC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,yDAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IACtD,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACnD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACzD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACjD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAC3D,CAAC;IAEO,yCAAY,GAApB;QACE,2EAA2E;QAC3E,KAAI,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAC,yDAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,yDAAc,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;SACvE;IAEH,CAAC;IAEM,0CAAa,GAApB,UAAqB,KAAK;QACxB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,yDAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;QAC9D,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACnD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACzD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACjD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAC3D,CAAC;IAEO,gDAAmB,GAA3B;QACE,IAAI,YAAY,GAAG,0DAAU,CAAC,KAAG,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChG,OAAO,0DAAU,CAAC,KAAG,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IAC/F,CAAC;IAEO,mDAAsB,GAA9B;QACE,IAAI,YAAY,GAAG,6DAAa,CAAC,KAAG,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACnG,OAAO,6DAAa,CAAC,KAAG,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IAClG,CAAC;IAEO,+CAAkB,GAA1B;QACE,IAAI,YAAY,GAAG,0DAAU,CAAC,KAAG,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChG,OAAO,0DAAU,CAAC,KAAG,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IAC/F,CAAC;IAEO,mDAAsB,GAA9B;QACE,IAAI,YAAY,GAAG,4DAAa,CAAC,KAAG,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACnG,OAAO,4DAAa,CAAC,KAAG,wEAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IAClG,CAAC;IApEU,kBAAkB;QAJ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,oIAAyC;SAC1C,CAAC;+EAgByB,sEAAa;OAf3B,kBAAkB,CAqE9B;IAAD,yBAAC;CAAA;AArE8B;;;;;;;;;;;;ACd/B,okBAAokB,OAAO,wEAAwE,uFAAuF,iBAAiB,yBAAyB,yC;;;;;;;;;;;ACApxB,+DAA+D,+P;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAGa;AACK;AACM;AACJ;AAStE;IA4IG,iDACU,aAA4B;QADtC,iBAkBC;QAjBS,kBAAa,GAAb,aAAa,CAAe;QA5ItC,WAAW;QACH,qBAAgB,GAAQ,0DAAgB,CAAC;QAwB1C,qBAAgB,GAAyC;YAC9D,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,oEAAoE;gBACpE,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,WAAW;4BACxB,SAAS,EAAE,SAAS;yBACrB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;yBACrB;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,cAAc;4BAC3B,SAAS,EAAE,SAAS;yBACrB;wBACD,SAAS,EAAE;4BACT,KAAK,EAAE,SAAS;yBACjB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;4BACpB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,6BAA6B,GAAG,CAAC,CAAC,CAAC;yBACjG;qBACF;iBACF;aACF;YACD,QAAQ,EAAG;gBACT,IAAI,EAAG;oBACL,OAAO,EAAG,GAAG;oBACb,WAAW,EAAE,CAAC;iBACf;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,EAAE;wBACR,MAAM,EAAE,MAAM;qBACf;oBACD,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE,UAAS,GAAG;wBACjB,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;wBACxB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACvC,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;wBAElB,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;4BACjD,IAAI,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE;gCAC1B,SAAS;6BACV;4BAED,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAC7B,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BACvC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BAEvC,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,MAAM,EAAE;gCAChC,OAAO,QAAQ,CAAC;6BACjB;yBACF;wBAED,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzC,CAAC;iBACF;aACF;YACD,UAAU,EAAE;gBACV,WAAW,EAAE,EACZ;aACF;YACD,MAAM,EAAE,EACP;YACD,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aAQd;SACF,CAAC;QAEK,oBAAe,GAAY;YAChC;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;SACF,CAAC;QACK,oBAAe,GAAG,IAAI,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC;QACvB,qBAAgB,GAAG,CAAC,sDAAiB,CAAC,CAAC;QAK3C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,YAAY;YAC3D,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YACnC,KAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;YACxC,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YAEnC,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;YACzC,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,KAAI,CAAC,aAAa,GAAG;gBACnB,EAAE,IAAI,EAAE,KAAI,CAAC,wBAAwB,EAAE,KAAK,EAAE,aAAa,EAAE;gBAC7D,EAAE,IAAI,EAAE,KAAI,CAAC,6BAA6B,EAAE,KAAK,EAAE,iBAAiB,EAAE;aACvE,CAAC;YACF,mFAAmF;QACpF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAQ,GAAR;IACA,CAAC;IAGO,oEAAkB,GAA1B;QAAA,iBAaC;QAZC,IAAM,mBAAmB,GAAG,wEAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAC;QACtF,+FAAO,OAAmC,mBAAmB,sBAAmB,CAAC;aAC/E,IAAI,CAAC,cAAI;YACT,uBAAuB;YACvB,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,OAAO,CAAC;YAC1C,KAAI,CAAC,0BAA0B,EAAE,CAAC;YAClC,KAAI,CAAC,8BAA8B,EAAE,CAAC;YACtC,KAAI,CAAC,eAAe,EAAE,CAAC;QACxB,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACN,CAAC;IAGD,iCAAiC;IACzB,4EAA0B,GAAlC;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxF,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aAErB;YACF,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;IAGD,qCAAqC;IAC7B,gFAA8B,GAAtC;QACE,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrE,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjG,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC;gBAC/E,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnI,gBAAgB,GAAG,CAAC,CAAC;aACvB;SACD;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACnE,CAAC;IAGO,iEAAe,GAAvB;QACE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAClG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAElG,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAC3G,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAE3G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC;QAEtJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC;QACvJ,2GAA2G;QAC3G,2GAA2G;IAC5G,CAAC;IApOS,uCAAuC;QALnD,+DAAS,CAAC;YACT,QAAQ,EAAE,wCAAwC;YAClD,sNAAkE;;SAEnE,CAAC;+EA8I0B,sEAAa;OA7I5B,uCAAuC,CAwOnD;IAAD,8CAAC;CAAA;AAxOmD;;;;;;;;;;;;ACfpD,ukBAAukB,OAAO,wEAAwE,uFAAuF,iBAAiB,yBAAyB,uC;;;;;;;;;;;ACAvxB,+DAA+D,+Q;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AAEC;AACC;AACY;AAGP;AACE;AACW;AAOjF;IA4IE,wDACU,IAAgB,EAChB,aAA4B;QAFtC,iBAqBC;QApBS,SAAI,GAAJ,IAAI,CAAY;QAChB,kBAAa,GAAb,aAAa,CAAe;QA5I9B,wBAAmB,GAAQ,6DAAmB,CAAC;QAUhD,mBAAc,GAAkB,EAAE,CAAC;QAEnC,kBAAa,GAAoB,EAAE,CAAC;QACpC,SAAI,GAAkB,EAAE,CAAC;QACzB,oBAAe,GAAY,EAAE,CAAC;QAQ9B,qBAAgB,GAAyC;YAC9D,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,oEAAoE;gBACpE,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,WAAW;4BACxB,SAAS,EAAE,SAAS;yBACrB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;yBACrB;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,iBAAiB;4BAC9B,SAAS,EAAE,SAAS;yBACrB;wBACD,SAAS,EAAE;4BACT,KAAK,EAAE,SAAS;yBACjB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;4BACpB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC;yBACnG;qBACF;iBACF;aACF;YACD,QAAQ,EAAG;gBACT,IAAI,EAAG;oBACL,OAAO,EAAG,GAAG;oBACb,WAAW,EAAE,CAAC;iBACf;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,EAAE;wBACR,MAAM,EAAE,MAAM;qBACf;oBACD,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE,UAAS,GAAG;wBACjB,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;wBACxB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACvC,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;wBAElB,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;4BACjD,IAAI,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE;gCAC1B,SAAS;6BACV;4BAED,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAC7B,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BACvC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BAEvC,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,MAAM,EAAE;gCAChC,OAAO,QAAQ,CAAC;6BACjB;yBACF;wBAED,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzC,CAAC;iBACF;aACF;YACD,UAAU,EAAE;gBACV,WAAW,EAAE,EACZ;aACF;YACD,MAAM,EAAE,EACP;YACD,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aAQd;SACF,CAAC;QAEK,oBAAe,GAAY;YAChC;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;SACF,CAAC;QACK,oBAAe,GAAG,IAAI,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC;QACvB,qBAAgB,GAAG,CAAC,sDAAiB,CAAC,CAAC;QAQ1C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,YAAY;YAC3D,KAAI,CAAC,0BAA0B,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC;YAC1C,KAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;YACtC,KAAI,CAAC,gCAAgC,GAAG,EAAE,CAAC;YAC3C,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YAEnC,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;YACzC,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,KAAI,CAAC,aAAa,GAAG;gBACnB,EAAE,IAAI,EAAE,KAAI,CAAC,2BAA2B,EAAE,KAAK,EAAE,iBAAiB,EAAE;gBACpE,EAAE,IAAI,EAAE,KAAI,CAAC,gCAAgC,EAAE,KAAK,EAAE,8BAA8B,EAAE;aACvF,CAAC;YACF,wFAAwF;QAC1F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iEAAQ,GAAR;IAEA,CAAC;IAEO,2EAAkB,GAA1B;QAAA,iBAaC;QAZC,IAAM,mBAAmB,GAAG,wEAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAC;QACtF,kGAAO,OAAmC,mBAAmB,yBAAsB,CAAC;aACnF,IAAI,CAAC,cAAI;YACR,uBAAuB;YACvB,KAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7C,KAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,KAAI,CAAC,iCAAiC,EAAE,CAAC;YACzC,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,oCAAoC;IAC5B,sFAA6B,GAArC;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5F,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACxG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,gBAAgB,oBAAC,CAAC,CAAC;gBACxI,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IACH,CAAC;IAGD,wCAAwC;IAChC,0FAAiC,GAAzC;QACE,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzE,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChH,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;gBAEnF,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,gBAAgB,oBAAC,CAAC,CAAC;gBAE/K,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnI,gBAAgB,GAAG,CAAC,CAAC;aACtB;SACF;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACnE,CAAC;IAGO,wEAAe,GAAvB;QACE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,0BAA0B,EAAE,kBAAkB,CAAC,CAAC;QAC7G,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,0BAA0B,EAAE,kBAAkB,CAAC,CAAC;QAE7G,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,+BAA+B,EAAE,kBAAkB,CAAC,CAAC;QACvH,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,+BAA+B,EAAE,kBAAkB,CAAC,CAAC;QACvH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,gCAAgC,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,gCAAgC,CAAC;QACpK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,gCAAgC,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,gCAAgC,CAAC;QACpK,iHAAiH;QACjH,iHAAiH;IACnH,CAAC;IAGO,wEAAe,GAAvB,UAAwB,IAAmB,EAAE,QAAgB;QAC3D,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,OAAO;YACrC,OAAO,CAAC,IAAI,CAAC,KAAG,QAAU,CAAC,GAAG,OAAO,CAAC,KAAG,QAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAG,QAAU,CAAC,CAAC,CAAC;IAC3C,CAAC;IAEO,wEAAe,GAAvB,UAAwB,IAAmB,EAAE,QAAgB;QAC3D,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,OAAO;YACvC,OAAO,CAAC,IAAI,CAAC,KAAG,QAAU,CAAC,GAAG,OAAO,CAAC,KAAG,QAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;QACzE,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAG,QAAU,CAAC,CAAC,CAAC;IAC3C,CAAC;IA5G8B;QAA9B,+DAAS,CAAC,6DAAkB,CAAC;wEAAQ,6DAAkB;iFAAC;IA1I9C,8CAA8C;QAL1D,+DAAS,CAAC;YACT,QAAQ,EAAE,+CAA+C;YACzD,2OAAyE;;SAE1E,CAAC;+EA8IgB,+DAAU;YACD,sEAAa;OA9I3B,8CAA8C,CAyS1D;IAAD,qDAAC;CAAA;AAzS0D;;;;;;;;;;;;AChB3D,okBAAokB,OAAO,wEAAwE,uFAAuF,iBAAiB,yBAAyB,qC;;;;;;;;;;;ACApxB,+DAA+D,uP;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAC+B;AACP;AACN;AAGL;AACpB;AAQ3C;IA8IE,+CACU,aAA4B,EAC5B,QAAkB;QAF5B,iBAsBC;QArBS,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAU;QA9I5B,WAAW;QACH,wBAAmB,GAAQ,6DAAmB,CAAC;QAC/C,oBAAe,GAAQ,0DAAe,CAAC;QAoBxC,qBAAgB,GAAyC;YAC9D,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,oEAAoE;gBACpE,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,WAAW;4BACxB,SAAS,EAAE,SAAS;yBACrB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;yBACrB;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,iBAAiB;4BAC9B,SAAS,EAAE,SAAS;yBACrB;wBACD,SAAS,EAAE;4BACT,KAAK,EAAE,SAAS;yBACjB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;4BACpB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;yBAC3F;qBACF;iBACF;aACF;YACD,QAAQ,EAAG;gBACT,IAAI,EAAG;oBACL,OAAO,EAAG,GAAG;oBACb,WAAW,EAAE,CAAC;iBACf;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,EAAE;wBACR,MAAM,EAAE,MAAM;qBACf;oBACD,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE,UAAS,GAAG;wBACjB,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;wBACxB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACvC,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;wBAElB,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;4BACjD,IAAI,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE;gCAC1B,SAAS;6BACV;4BAED,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAC7B,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BACvC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BAEvC,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,MAAM,EAAE;gCAChC,OAAO,QAAQ,CAAC;6BACjB;yBACF;wBAED,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzC,CAAC;iBACF;aACF;YACD,UAAU,EAAE;gBACV,WAAW,EAAE,EACZ;aACF;YACD,MAAM,EAAE,EACP;YACD,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aAQd;SACF,CAAC;QAEK,oBAAe,GAAY;YAChC;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;SACF,CAAC;QACK,oBAAe,GAAG,IAAI,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC;QACvB,qBAAgB,GAAG,CAAC,sDAAiB,CAAC,CAAC;QAU5C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,YAAY;YACzD,KAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;YACtC,KAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAClC,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAE1B,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;YAEzC,KAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,KAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,KAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,+EAA+E;YAE/E,KAAI,CAAC,aAAa,GAAG;gBACnB,EAAE,IAAI,EAAE,KAAI,CAAC,2BAA2B,EAAE,KAAK,EAAE,iBAAiB,EAAE;gBACpE,EAAE,IAAI,EAAE,KAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,aAAa,EAAE;aAC7D,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAQ,GAAR;IACA,CAAC;IAGC,oCAAoC;IAC5B,6EAA6B,GAArC;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAE5F,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACxG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpF,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;QACD,iDAAiD;IACnD,CAAC;IAGD,gCAAgC;IACxB,yEAAyB,GAAjC;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,IAAI,MAAM,CAAC;QACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxF,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,eAAe,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzG,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACpG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChF,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC;gBAC1H,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClC,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IACH,CAAC;IAEO,+DAAe,GAAvB;QACE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QACxG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAExG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAChG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAChG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC;QAClJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC;QAClJ,wGAAwG;QACxG,wGAAwG;IAC1G,CAAC;IA1NQ,qCAAqC;QALjD,+DAAS,CAAC;YACT,QAAQ,EAAE,sCAAsC;YAChD,gNAAgE;;SAEjE,CAAC;+EAgJyB,sEAAa;YAClB,wDAAQ;OAhJjB,qCAAqC,CA6NjD;IAAD,4CAAC;CAAA;AA7NiD;;;;;;;;;;;;ACflD,okBAAokB,OAAO,wEAAwE,uFAAuF,iBAAiB,yBAAyB,yC;;;;;;;;;;;ACApxB,+DAA+D,uP;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAGa;AACK;AACK;AACH;AAStE;IA4IG,+CACU,aAA4B;QADtC,iBAkBC;QAjBS,kBAAa,GAAb,aAAa,CAAe;QA3ItC,WAAW;QACH,oBAAe,GAAQ,0DAAe,CAAC;QAuBxC,qBAAgB,GAAyC;YAC9D,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,oEAAoE;gBACpE,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,WAAW;4BACxB,SAAS,EAAE,SAAS;yBACrB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;yBACrB;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,aAAa;4BAC1B,SAAS,EAAE,SAAS;yBACrB;wBACD,SAAS,EAAE;4BACT,KAAK,EAAE,SAAS;yBACjB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;4BACpB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,4BAA4B,GAAG,CAAC,CAAC,CAAC;yBAChG;qBACF;iBACF;aACF;YACD,QAAQ,EAAG;gBACT,IAAI,EAAG;oBACL,OAAO,EAAG,GAAG;oBACb,WAAW,EAAE,CAAC;iBACf;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,EAAE;wBACR,MAAM,EAAE,MAAM;qBACf;oBACD,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE,UAAS,GAAG;wBACjB,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;wBACxB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACvC,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;wBAElB,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;4BACjD,IAAI,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE;gCAC1B,SAAS;6BACV;4BAED,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAC7B,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BACvC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BAEvC,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,MAAM,EAAE;gCAChC,OAAO,QAAQ,CAAC;6BACjB;yBACF;wBAED,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzC,CAAC;iBACF;aACF;YACD,UAAU,EAAE;gBACV,WAAW,EAAE,EACZ;aACF;YACD,MAAM,EAAE,EACP;YACD,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aAQd;SACF,CAAC;QAEK,oBAAe,GAAY;YAChC;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;SACF,CAAC;QACK,oBAAe,GAAG,IAAI,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC;QACvB,qBAAgB,GAAG,CAAC,sDAAiB,CAAC,CAAC;QAK1C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,YAAY;YAC3D,KAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAClC,KAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;YACvC,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YAEnC,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;YACzC,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,KAAI,CAAC,aAAa,GAAG;gBACnB,EAAE,IAAI,EAAE,KAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,aAAa,EAAE;gBAC5D,EAAE,IAAI,EAAE,KAAI,CAAC,4BAA4B,EAAE,KAAK,EAAE,iBAAiB,EAAE;aACtE,CAAC;YACH,iFAAiF;QAClF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAQ,GAAR;IACA,CAAC;IAGO,kEAAkB,GAA1B;QAAA,iBAaC;QAZC,IAAM,mBAAmB,GAAG,wEAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAC;QACtF,8FAAO,OAAmC,mBAAmB,qBAAkB,CAAC;aAC/E,IAAI,CAAC,cAAI;YACR,uBAAuB;YACvB,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC;YACzC,KAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,KAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,gCAAgC;IACxB,yEAAyB,GAAjC;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxF,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,eAAe,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzG,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACpG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;IAGD,oCAAoC;IAC5B,6EAA6B,GAArC;QACE,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrE,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC;gBAC9E,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC/H,gBAAgB,GAAG,CAAC,CAAC;aACtB;SACF;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACnE,CAAC;IAGO,+DAAe,GAAvB;QACC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAChG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAEhG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QACzG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAEzG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC;QAElJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC;QAClJ,yGAAyG;QACzG,yGAAyG;IAC1G,CAAC;IAnOS,qCAAqC;QALjD,+DAAS,CAAC;YACT,QAAQ,EAAE,sCAAsC;YAChD,gNAAgE;;SAEjE,CAAC;+EA8I0B,sEAAa;OA7I5B,qCAAqC,CAoOjD;IAAD,4CAAC;CAAA;AApOiD;;;;;;;;;;;;ACflD,qkBAAqkB,OAAO,wEAAwE,uFAAuF,iBAAiB,yBAAyB,yC;;;;;;;;;;;ACArxB,+DAA+D,uQ;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAGa;AACK;AACU;AACR;AAQtE;IA6IE,qDACU,aAA4B;QADtC,iBAkBC;QAjBS,kBAAa,GAAb,aAAa,CAAe;QA5ItC,WAAW;QACH,uBAAkB,GAAQ,4DAAkB,CAAC;QAwB9C,qBAAgB,GAAyC;YAC9D,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,oEAAoE;gBACpE,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,WAAW;4BACxB,SAAS,EAAE,SAAS;yBACrB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;yBACrB;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,gBAAgB;4BAC7B,SAAS,EAAE,SAAS;yBACrB;wBACD,SAAS,EAAE;4BACT,KAAK,EAAE,SAAS;yBACjB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;4BACpB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC;yBACnG;qBACF;iBACF;aACF;YACD,QAAQ,EAAG;gBACT,IAAI,EAAG;oBACL,OAAO,EAAG,GAAG;oBACb,WAAW,EAAE,CAAC;iBACf;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,EAAE;wBACR,MAAM,EAAE,MAAM;qBACf;oBACD,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE,UAAS,GAAG;wBACjB,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;wBACxB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACvC,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;wBAElB,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;4BACjD,IAAI,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE;gCAC1B,SAAS;6BACV;4BAED,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAC7B,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BACvC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BAEvC,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,MAAM,EAAE;gCAChC,OAAO,QAAQ,CAAC;6BACjB;yBACF;wBAED,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzC,CAAC;iBACF;aACF;YACD,UAAU,EAAE;gBACV,WAAW,EAAE,EACZ;aACF;YACD,MAAM,EAAE,EACP;YACD,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aAQd;SACF,CAAC;QAEK,oBAAe,GAAY;YAChC;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;SACF,CAAC;QACK,oBAAe,GAAG,IAAI,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC;QACvB,qBAAgB,GAAG,CAAC,sDAAiB,CAAC,CAAC;QAK1C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,YAAY;YAC3D,KAAI,CAAC,0BAA0B,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC;YAC1C,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YAEnC,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;YACzC,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,KAAI,CAAC,aAAa,GAAG;gBACnB,EAAE,IAAI,EAAE,KAAI,CAAC,0BAA0B,EAAE,KAAK,EAAE,aAAa,EAAE;gBAC/D,EAAE,IAAI,EAAE,KAAI,CAAC,+BAA+B,EAAE,KAAK,EAAE,iBAAiB,EAAE;aACzE,CAAC;YACF,sFAAsF;QACxF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8DAAQ,GAAR;IACA,CAAC;IAGO,wEAAkB,GAA1B;QAAA,iBAaC;QAZC,IAAM,mBAAmB,GAAG,wEAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAC;QACtF,iGAAO,OAAmC,mBAAmB,wBAAqB,CAAC;aAClF,IAAI,CAAC,cAAI;YACR,uBAAuB;YACvB,KAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5C,KAAI,CAAC,4BAA4B,EAAE,CAAC;YACpC,KAAI,CAAC,gCAAgC,EAAE,CAAC;YACxC,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,mCAAmC;IAC3B,kFAA4B,GAApC;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3F,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,kBAAkB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACvG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;IAGD,uCAAuC;IAC/B,sFAAgC,GAAxC;QACE,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxE,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC;gBACjF,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClI,gBAAgB,GAAG,CAAC,CAAC;aACtB;SACF;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACnE,CAAC;IAGO,qEAAe,GAAvB;QACE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACtG,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QAEtG,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC/G,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAE/G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC;QAE9J,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC;QAC9J,8GAA8G;QAC9G,8GAA8G;IAChH,CAAC;IApOU,2CAA2C;QALvD,+DAAS,CAAC;YACT,QAAQ,EAAE,4CAA4C;YACtD,kOAAsE;;SAEvE,CAAC;+EA+IyB,sEAAa;OA9I3B,2CAA2C,CAsOvD;IAAD,kDAAC;CAAA;AAtOuD;;;;;;;;;;;;ACdxD,0hBAA0hB,OAAO,wEAAwE,uFAAuF,iBAAiB,yBAAyB,qC;;;;;;;;;;;ACA1uB,+DAA+D,+P;;;;;;;;;;;;;;;;;;;;;;ACAb;AAC+B;AACb;AAGL;AAO/D;IAuLE,kDACU,aAA4B;QADtC,iBAqCC;QApCS,kBAAa,GAAb,aAAa,CAAe;QAtLtC,WAAW;QACH,wBAAmB,GAAQ,6DAAmB,CAAC;QAiChD,qBAAgB,GAAyC;YAC9D,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,oEAAoE;gBACpE,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,WAAW;4BACxB,SAAS,EAAE,SAAS;yBACrB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;yBACrB;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL;wBACE,UAAU,EAAE;4BACV,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,iBAAiB;4BAC9B,SAAS,EAAE,SAAS;yBACrB;wBACD,SAAS,EAAE;4BACT,KAAK,EAAE,SAAS;yBACjB;wBACD,KAAK,EAAE;4BACL,SAAS,EAAE,SAAS;4BACpB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,GAAG,EAAG,IAAI,CAAC,QAAQ;4BACnB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;yBAC1D;qBACF;iBACF;aACF;YACD,QAAQ,EAAG;gBACT,IAAI,EAAG;oBACL,OAAO,EAAG,GAAG;oBACb,WAAW,EAAE,CAAC;iBACf;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,EAAE;wBACR,MAAM,EAAE,MAAM;qBACf;oBACD,MAAM,EAAE,CAAC;oBACT,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE;qBACT;oBACD,KAAK,EAAE,UAAS,GAAG;wBACjB,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;wBACxB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACvC,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,MAAM,GAAG,GAAG,CAAC;wBACjB,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;wBAElB,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;4BACjD,IAAI,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE;gCAC1B,SAAS;6BACV;4BAED,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAC7B,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BACvC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;4BAEvC,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,MAAM,EAAE;gCAChC,OAAO,QAAQ,CAAC;6BACjB;yBACF;wBAED,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzC,CAAC;iBACF;aACF;YACD,UAAU,EAAE;gBACV,WAAW,EAAE,EACZ;aACF;YACD,MAAM,EAAE,EACP;YACD,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aASd;SACF,CAAC;QAEK,oBAAe,GAAY;YAChC;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;gBAChC,oBAAoB,EAAE,SAAS;aAChC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;YACD;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,SAAS;aACjC;SACF,CAAC;QACK,oBAAe,GAAG,IAAI,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC;QACvB,qBAAgB,GAAG,CAAC,sDAAiB,CAAC,CAAC;QAS5C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,YAAY;YACzD,KAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;YACxC,KAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;YACzC,KAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;YACxC,KAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;YACxC,KAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;YACxC,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAE1B,KAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,KAAK;YACjC,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,QAAQ;YACrC,KAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,QAAQ;YACpC,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC,QAAQ;YAC9B,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,QAAQ;YAG7B,KAAI,CAAC,kCAAkC,EAAE,CAAC;YAC1C,KAAI,CAAC,mCAAmC,EAAE,CAAC;YAC3C,KAAI,CAAC,kCAAkC,EAAE,CAAC;YAC1C,KAAI,CAAC,kCAAkC,EAAE,CAAC;YAC1C,KAAI,CAAC,kCAAkC,EAAE,CAAC;YAC1C,KAAI,CAAC,eAAe,EAAE,CAAC;YAIvB,KAAI,CAAC,aAAa,GAAG;gBACnB,EAAE,IAAI,EAAE,KAAI,CAAC,6BAA6B,EAAE,KAAK,EAAE,KAAK,EAAE;gBAC1D,EAAE,IAAI,EAAE,KAAI,CAAC,8BAA8B,EAAE,KAAK,EAAE,OAAO,EAAE;gBAC7D,EAAE,IAAI,EAAE,KAAI,CAAC,6BAA6B,EAAE,KAAK,EAAE,OAAO,EAAE;gBAC5D,EAAE,IAAI,EAAE,KAAI,CAAC,6BAA6B,EAAE,KAAK,EAAE,OAAO,EAAE;gBAC5D,EAAE,IAAI,EAAE,KAAI,CAAC,6BAA6B,EAAE,KAAK,EAAE,OAAO,EAAE;aAC7D,CAAC;YAEF,mCAAmC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAAQ,GAAR;IACA,CAAC;IAGC,kEAAkE;IAC1D,qFAAkC,GAA1C;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,iBAAmB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzF,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,iBAAmB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,iBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrG,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtF,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;IAED,yEAAyE;IACjE,sFAAmC,GAA3C;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,kBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1F,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,kBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,kBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACtG,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvF,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;IAGD,wEAAwE;IAChE,qFAAkC,GAA1C;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,iBAAmB,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzF,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,iBAAmB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1G,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,iBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrG,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,iBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC9F,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;IAED,8CAA8C;IACtC,qFAAkC,GAA1C;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,UAAY,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClF,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,UAAY,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnG,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,UAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAC9F,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtF,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;IAED,8CAA8C;IACtC,qFAAkC,GAA1C;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,UAAY,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClF,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,UAAY,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnG,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAG,IAAI,CAAC,UAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAC9F,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtF,KAAK,GAAG,CAAC,CAAC;gBACV,gBAAgB,GAAG,CAAC,CAAC;aACtB;YACD,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;IAEO,kEAAe,GAAvB;QACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACpG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAEpG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;QACtG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;QAEtG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACpG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAEpG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACpG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAEpG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACpG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAEpG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,EACtD,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,EACtD,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,qBAAqB,CAC7B,CAAC;QACxB,6HAA6H;QAC7H,6HAA6H;IAC/H,CAAC;IApVQ,wCAAwC;QALpD,+DAAS,CAAC;YACT,QAAQ,EAAE,yCAAyC;YACnD,yNAAmE;;SAEpE,CAAC;+EAyLyB,sEAAa;OAxL3B,wCAAwC,CAsVpD;IAAD,+CAAC;CAAA;AAtVoD;;;;;;;;;;;;ACZrD,wY;;;;;;;;;;;;;;;;;ACAkD;AAMlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAJ3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,wHAAsC;SACvC,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACN5B,wX;;;;;;;;;;;;;;;;;ACAkD;AAMlD;IAIE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IAPU,kBAAkB;QAJ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,oJAA0C;SAC3C,CAAC;;OACW,kBAAkB,CAS9B;IAAD,yBAAC;CAAA;AAT8B;;;;;;;;;;;;ACN/B,8rC;;;;;;;;;;;;;;;;;;ACAgD;AACU;AAM1D;IAEE,0BAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;IACxC,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IANU,gBAAgB;QAJ5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,8IAAwC;SACzC,CAAC;+EAG4B,2DAAY;OAF7B,gBAAgB,CAQ5B;IAAD,uBAAC;CAAA;AAR4B;;;;;;;;;;;;ACP7B,ubAAub,0CAA0C,4TAA4T,yCAAyC,6O;;;;;;;;;;;;;;;;;;;;;ACAjxB;AACT;AACZ;AACoB;AAMpD;IAEE,yBAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;IACxC,CAAC;IAGD,sBAAI,6CAAgB;aAApB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAMD,6CAAmB,GAAnB;QACE,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;IACvE,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;IACrE,CAAC;IAdD;QADC,iEAAW,CAAC,gBAAgB,CAAC;;;2DAG7B;IAIiB;QAAjB,mEAAM,CAAC,QAAQ,CAAC;wEAAiB,+CAAU;oDAAM;IAZvC,eAAe;QAJ3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,wHAAsC;SACvC,CAAC;+EAG4B,2DAAY;OAF7B,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtB2B;;;;;;;;;;;;ACT5B,yMAAyM,MAAM,oDAAoD,SAAS,8EAA8E,YAAY,qc;;;;;;;;;;;;;;;;;ACAvT;AAM/C;IAAA;IAMA,CAAC;IAJU;QAAR,2DAAK,EAAE;;uDAAS;IACR;QAAR,2DAAK,EAAE;;0DAAY;IACX;QAAR,2DAAK,EAAE;;oDAAM;IAJH,kBAAkB;QAJ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,oIAA0C;SAC3C,CAAC;OACW,kBAAkB,CAM9B;IAAD,yBAAC;CAAA;AAN8B;;;;;;;;;;;;ACN/B,mD;;;;;;;;;;;;;;;;;ACAkD;AAMlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QAJzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mIAAoC;SACrC,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACN1B,4kCAA4kC,4BAA4B,wRAAwR,iEAAiE,qvBAAqvB,+BAA+B,wRAAwR,oEAAoE,0vBAA0vB,+BAA+B,2RAA2R,wEAAwE,yvBAAyvB,2BAA2B,kRAAkR,oEAAoE,oR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAztJ;AACV;AACR;AACZ;AACe;AACkB;AACC;AACM;AACN;AACK;AACF;AAOrE;IAUE,0BACS,OAAqB,EACpB,cAA8B,EAC9B,aAA4B;QAF7B,YAAO,GAAP,OAAO,CAAc;QACpB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAV/B,gBAAW,GAAG,UAAU,CAAC;QAsBhC,aAAQ,GAAG,gBAAgB,CAAC;IAV5B,CAAC;IAEM,wCAAa,GAApB;IAEA,CAAC;IAQD,wCAAa,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;IAC3D,CAAC;IAED,uCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;IACzD,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAgBC;QAfC,UAAU,CAAC;YACT,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,IAAI,KAAI,CAAC,UAAU,GAAG,IAAI,EAAE;gBAC1B,KAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC;QAGlF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACrD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACnD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,0DAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QAAA,CAAC;IACxD,CAAC;IAGD,mCAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;QAE7C,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;SACpC;IACH,CAAC;IAID,4BAA4B;IACpB,+CAAoB,GAA5B;QACE,IAAI,YAAY,GAAG,0DAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACjD,OAAO,0DAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IAChD,CAAC;IAED,+BAA+B;IACvB,kDAAuB,GAA/B;QACE,IAAI,YAAY,GAAG,6DAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACpD,OAAO,6DAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IACnD,CAAC;IAED,2BAA2B;IACnB,8CAAmB,GAA3B;QACE,IAAI,YAAY,GAAG,0DAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACjD,OAAO,0DAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IAChD,CAAC;IAED,8BAA8B;IACtB,kDAAuB,GAA/B;QACE,IAAI,YAAY,GAAG,6DAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACpD,OAAO,6DAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IACnD,CAAC;IAnEiB;QAAjB,mEAAM,CAAC,QAAQ,CAAC;wEAAiB,+CAAU;qDAAM;IAiClD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;oDASzC;IA9DU,gBAAgB;QAJ5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,2HAAuC;SACxC,CAAC;+EAYkB,2DAAY;YACJ,8DAAc;YACf,sEAAa;OAb3B,gBAAgB,CA0F5B;IAAD,uBAAC;CAAA;AA1F4B;;;;;;;;;;;;ACjB7B,oCAAoC,yRAAyR,qjB;;;;;;;;;;;;;;;;;;;;;;;ACArR;AACI;AACZ;AACsC;AACrB;AAC8B;AA+B/E;IAIE,6BAAmB,OAAqB,EAAS,aAA4B;QAA1D,YAAO,GAAP,OAAO,CAAc;QAAS,kBAAa,GAAb,aAAa,CAAe;IAC7E,CAAC;IAED,iDAAmB,GAAnB;QACE,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;IACvE,CAAC;IAPiB;QAAjB,mEAAM,CAAC,QAAQ,CAAC;wEAAiB,+CAAU;wDAAM;IAFvC,mBAAmB;QA7B/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,4HAA2C;YAC3C,UAAU,EAAE;gBAEV,mEAAO,CAAC,sBAAsB,EAAE;oBAC9B,sEAAU,CAAC,SAAS,EAAE;wBACpB,iEAAK,CAAC,gBAAgB,EAAE;4BACtB,iEAAK,CAAC;gCACJ,OAAO,EAAE,CAAC;gCACV,OAAO,EAAE,MAAM;gCACf,IAAI,EAAE,GAAG;gCACT,SAAS,EAAE,mBAAmB;gCAC9B,aAAa,EAAE,QAAQ;6BAExB,CAAC;yBACH,CAAC;wBACF,iEAAK,CAAC,QAAQ,EAAE;4BACd,mEAAO,CAAC,YAAY,EAAE,iEAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,eAAe,EAAC,CAAC,CAAC;yBACvE,CAAC;wBAEF,iEAAK,CAAC,QAAQ,EAAE;4BACd,mEAAO,CAAC,YAAY,EAAE,iEAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAC,CAAC,CAAC;yBAC1E,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;qBACxB,CAAC;iBACH,CAAC;aACH;SACF,CAAC;+EAM4B,2DAAY,EAAwB,gFAAa;OAJlE,mBAAmB,CAU/B;IAAD,0BAAC;CAAA;AAV+B;;;;;;;;;;;;ACpChC,+N;;;;;;;;;;;;;;;;;;ACAgD;AAC+B;AA6B/E;IAEE;IACA,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IANU,oBAAoB;QA3BhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,+HAA4C;YAC5C,UAAU,EAAE;gBAEV,mEAAO,CAAC,sBAAsB,EAAE;oBAC9B,sEAAU,CAAC,SAAS,EAAE;wBACpB,iEAAK,CAAC,gBAAgB,EAAE;4BACtB,iEAAK,CAAC;gCACJ,OAAO,EAAE,CAAC;gCACV,OAAO,EAAE,MAAM;gCACf,IAAI,EAAE,GAAG;gCACT,aAAa,EAAE,QAAQ;6BAExB,CAAC;yBACH,CAAC;wBACF,iEAAK,CAAC,QAAQ,EAAE;4BACd,mEAAO,CAAC,YAAY,EAAE,iEAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;yBAC3C,CAAC;wBAEF,iEAAK,CAAC,QAAQ,EAAE;4BACd,mEAAO,CAAC,YAAY,EAAE,iEAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;yBAC3C,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;qBACrB,CAAC;iBACH,CAAC;aACH;SACF,CAAC;;OACW,oBAAoB,CAQhC;IAAD,2BAAC;CAAA;AARgC;;;;;;;;;;;;;;;;;;;;AC9BU;AAEI;AAG/C;IAIE,uBACU,OAAkC;QAAlC,YAAO,GAAP,OAAO,CAA2B;IACxC,CAAC;sBANM,aAAa;IAQxB,iCAAS,GAAT;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpB,IAAI,EAAE,eAAa,CAAC,UAAU;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,oCAAY,GAAZ,UAAa,MAAM;QACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpB,IAAI,EAAE,eAAa,CAAC,aAAa;YACjC,OAAO,EAAE,MAAM;SAChB,CAAC,CAAC;IACL,CAAC;;IAlBM,wBAAU,GAAG,YAAY,CAAC;IAC1B,2BAAa,GAAG,eAAe,CAAC;IAF5B,aAAa;QADzB,gEAAU,EAAE;+EAMQ,4DAAO;OALf,aAAa,CAqBzB;IAAD,oBAAC;CAAA;AArByB;;;;;;;;;;;;;;;;;;ACLuB;AAEjD,IAAM,aAAa,GAAG;IACpB,WAAW,EAAG,EAAE;IAChB,YAAY,EAAG,EAAE;CAClB;AAEM,SAAS,aAAa,CAAC,KAAqB,EAAE,MAAW;IAAlC,6CAAqB;IAEjD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,6DAAa,CAAC,UAAU;YAC3B,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QAElC,KAAK,6DAAa,CAAC,aAAa;YAC9B,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,mDAAI,MAAM,CAAC,OAAO,EAAE,CAAC;QAEvD;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAwC;AACS;AAEjD;IAAA;IAEA,CAAC;IAAD,uBAAC;AAAD,CAAC;;AAAA,CAAC;AAEK,IAAM,WAAW,GAAG,6DAAe,CAAmB;IAC3D,MAAM,EAAE,6DAAa;CACtB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACToC;AACc;AAE0B;AAG/E,aAAa;AAEb,aAAa;AAE2E;AAGxF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6FAAmB;QAC9B,QAAQ,EAAE;YACR,YAAY;YACZ,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sGAAkB,EAAE,IAAI,EAAE,EAAC,cAAc,EAAE,gBAAgB,EAAC,EAAC;SACpF;KACF;IACD,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAC;CAC7B,CAAC;AAUF;IAAA;IACA,CAAC;IADY,gBAAgB;QAR5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EACnC;oBACE,yBAAyB,EAAE,SAAS;oBACpC,eAAe,EAAE,SAAS;iBAC3B,CAAC,CAAC;YACL,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;ACjC7B,sD;;;;;;;;;;;;;;;;;ACAwC;AAQxC;IAGE;QAFA,UAAK,GAAG,eAAe,CAAC;IAGxB,CAAC;IAJU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;SACpC,CAAC;;OAEW,YAAY,CAMxB;IAAD,mBAAC;CAAA;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+B;AACjB;AACyB;AACa;AAC1B;AACa;AACG;AACD;AACZ;AACS;AAElB;AACS;AACT;AAE7C,uBAAuB;AAEuC;AACT;AACQ;AACE;AAEvB;AAExC,SAAS;AAEsE;AACG;AACK;AAEvF,SAAS;AAEmE;AAC2B;AACN;AAEjG,UAAU;AAEqE;AACQ;AAEvF,SAAS;AAEmE;AAE5E,aAAa;AAEb,aAAa;AAE2E;AAC7C;AAG3C,SAAS;AAC6C;AACuI;AAC3B;AACS;AACT;AACkB;AACZ;AAExK,IAAM,gCAAgC,GAAoC;IACxE,eAAe,EAAE,IAAI;CACtB,CAAC;AA4EF;IACE,mBAAoB,OAAkC,EAClC,OAA0B;QAD1B,YAAO,GAAP,OAAO,CAA2B;QAClC,YAAO,GAAP,OAAO,CAAmB;QAE5C,IAAI,CAAC,OAAO,CAAC,cAAc,CACzB,+DAAW,EACX,EAAsB,EACtB,EAAE,EACF,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,WAAC,IAAI,QAAC,EAAD,CAAC,CAAC,CACpD,CAAC;IAEJ,CAAC;IAXU,SAAS;QA1ErB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBAEZ,SAAS;gBAET,4DAAY;gBACZ,8FAAmB;gBACnB,iGAAoB;gBACpB,sGAAkB;gBAElB,SAAS;gBAET,2FAAe;gBACf,sHAAkB;gBAClB,gHAAgB;gBAEhB,UAAU;gBAEV,8FAAgB;gBAChB,sGAAa;gBAEb,SAAS;gBAET,2FAAe;gBAEf,aAAa;gBAEb,aAAa;gBAEb,uGAAkB;gBAClB,0MAA8C;gBAC9C,+KAAqC;gBACrC,wLAAwC;gBACxC,+KAAqC;gBACrC,iMAA2C;gBAC3C,qLAAuC;aACxC;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,4FAAuB;gBACvB,kEAAa;gBACb,6DAAY;gBACZ,8EAAsB;gBAEtB,+BAA+B;gBAE/B,6EAAsB;gBACtB,qEAAS;gBACT,8EAAwB;gBACxB,0DAAW;gBACX,oEAAc;gBACd,kEAAmB;gBACnB,sEAAgB;gBAEhB,SAAS;gBAET,wDAAY;aACb;YACD,SAAS,EAAE;gBACT;oBACE,OAAO,EACP,+EAAwB;oBACxB,mBAAmB;oBACnB,QAAQ,EACR,gCAAgC;oBAChC,iCAAiC;iBAClC;gBACD,gFAAa;gBACb,yDAAQ;aACT;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;+EAG6B,4DAAO;YACP,sEAAiB;OAFnC,SAAS,CAYrB;IAAD,gBAAC;CAAA;AAZqB;;;;;;;;;;;;;AC5ItB;AAAA;AAAA,IAAY,gBA+LX;AA/LD,WAAY,gBAAgB;IACxB,2DAAM;IACN,qDAAG;IACH,yDAAK;IACL,yDAAK;IACL,yDAAK;IACL,qEAAW;IACX,6DAAO;IACP,6DAAO;IACP,6DAAO;IACP,2DAAM;IACN,sFAAqB;IACrB,kEAAS;IACT,8DAAO;IACP,kEAAS;IACT,8DAAO;IACP,oEAAU;IACV,8DAAO;IACP,8DAAO;IACP,oEAAU;IACV,gEAAQ;IACR,8DAAO;IACP,8DAAO;IACP,4DAAM;IACN,0DAAK;IACL,4DAAM;IACN,8DAAO;IACP,4FAAwB;IACxB,gEAAQ;IACR,4DAAM;IACN,4DAAM;IACN,gEAAQ;IACR,wEAAc;IACd,0DAAK;IACL,8DAAO;IACP,oEAAY;IACZ,gEAAQ;IACR,gEAAQ;IACR,4DAAM;IACN,gGAA0B;IAC1B,wDAAI;IACJ,0DAAK;IACL,0DAAK;IACL,gEAAQ;IACR,sFAAqB;IACrB,gFAAkB;IAClB,sEAAc;IACd,0EAAgB;IAChB,8DAAO;IACP,wDAAI;IACJ,4DAAM;IACN,8DAAO;IACP,8DAAO;IACP,gFAAkB;IAClB,gEAAQ;IACR,gEAAQ;IACR,oFAAoB;IACpB,8DAAO;IACP,0DAAK;IACL,sEAAa;IACb,kFAAmB;IACnB,8DAAO;IACP,8DAAO;IACP,gEAAQ;IACR,gEAAQ;IACR,wDAAI;IACJ,8DAAO;IACP,4DAAM;IACN,0DAAK;IACL,4DAAM;IACN,8DAAO;IACP,8DAAO;IACP,0DAAK;IACL,4DAAM;IACN,8DAAO;IACP,kEAAS;IACT,4DAAM;IACN,0EAAe;IACf,4DAAM;IACN,0DAAK;IACL,gEAAU;IACV,gEAAQ;IACR,8DAAO;IACP,8DAAO;IACP,kEAAS;IACT,wDAAI;IACJ,wDAAI;IACJ,8DAAO;IACP,4DAAM;IACN,8DAAO;IACP,0DAAK;IACL,4DAAM;IACN,oEAAU;IACV,0DAAK;IACL,0DAAK;IACL,4DAAM;IACN,4DAAM;IACN,oEAAU;IACV,wDAAI;IACJ,4DAAM;IACN,8DAAO;IACP,+DAAO;IACP,2DAAK;IACL,2EAAa;IACb,mEAAS;IACT,qEAAU;IACV,qEAAU;IACV,6DAAM;IACN,iEAAQ;IACR,iEAAQ;IACR,yDAAI;IACJ,2DAAK;IACL,qEAAU;IACV,mEAAS;IACT,6DAAM;IACN,+DAAO;IACP,6DAAM;IACN,iEAAQ;IACR,qEAAU;IACV,+DAAO;IACP,qEAAU;IACV,qEAAY;IACZ,+DAAO;IACP,2DAAK;IACL,uEAAW;IACX,uEAAa;IACb,mEAAS;IACT,2DAAK;IACL,+DAAO;IACP,+EAAiB;IACjB,6DAAM;IACN,yDAAI;IACJ,iEAAQ;IACR,6DAAM;IACN,iFAAkB;IAClB,iEAAQ;IACR,yDAAI;IACJ,uEAAW;IACX,6DAAM;IACN,iEAAQ;IACR,2DAAK;IACL,+DAAO;IACP,6DAAM;IACN,6DAAM;IACN,2FAAuB;IACvB,uEAAa;IACb,iHAAkC;IAClC,qEAAY;IACZ,2FAAuB;IACvB,yEAAc;IACd,+DAAO;IACP,6DAAM;IACN,qEAAU;IACV,yEAAc;IACd,mEAAS;IACT,iEAAQ;IACR,iEAAQ;IACR,+DAAO;IACP,yEAAc;IACd,uEAAa;IACb,mEAAW;IACX,2DAAK;IACL,iEAAQ;IACR,6DAAM;IACN,uEAAW;IACX,2DAAK;IACL,6DAAM;IACN,iEAAQ;IACR,iEAAQ;IACR,uEAAa;IACb,yDAAI;IACJ,uFAAqB;IACrB,+DAAO;IACP,6DAAM;IACN,6DAAM;IACN,+DAAO;IACP,yFAAsB;IACtB,6EAAgB;IAChB,+DAAO;IACP,qEAAU;IACV,mEAAS;IACT,+DAAO;IACP,qFAAoB;IACpB,6EAAgB;IAChB,2DAAK;IACL,6DAAM;IACN,iEAAQ;IACR,SAAS;IACT,WAAW;IACX,WAAW;IACX,UAAU;AACd,CAAC,EA/LW,gBAAgB,KAAhB,gBAAgB,QA+L3B;;;;;;;;;;;;;;;;;;;AC/L0C;AACH;AAKxC;IAIE;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,oDAAe,CAAU,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,2BAA2B;IACpB,8CAAsB,GAA7B,UAA8B,YAAiB;QAC7C,IAAI,YAAY,KAAK,SAAS,EAAE;YAC9B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC1C;IACH,CAAC;IAEM,+BAAO,GAAd,UAAe,OAAO,EAAE,OAAO;QAC7B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,CAAC;QAC7C,IAAI,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QAC9B,OAAO,EAAE,GAAG,GAAG,GAAE,EAAE,GAAG,GAAG,GAAE,CAAC,CAAC;IAC/B,CAAC;IAGM,uCAAe,GAAtB,UAAuB,IAAmB;QACxC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,OAAO;YACvC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAEM,uCAAe,GAAtB,UAAuB,IAAmB;QACxC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,OAAO;YACvC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IApCU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CAqCzB;IAAD,oBAAC;CAAA;AArCyB;;;;;;;;;;;;;;;;;;ACNiB;AAK3C;IAHA;QAIE,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;QACtB,wBAAmB,GAAG,KAAK,CAAC;QAC5B,uBAAkB,GAAG,KAAK,CAAC;QAC3B,sBAAiB,GAAG,KAAK,CAAC;IAC5B,CAAC;IANY,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,YAAY,CAMxB;IAAD,mBAAC;CAAA;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACxCA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n<div class=\\\"mb-3 card\\\">\\r\\n  <div class=\\\"card-header-tab card-header\\\">\\r\\n    <div class=\\\"card-header-title font-size-lg text-capitalize font-weight-normal\\\">\\r\\n      <i class=\\\"header-icon lnr-charts icon-gradient bg-happy-green\\\"> </i>\\r\\n      Select Country\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"no-gutters row\\\">\\r\\n    <div class=\\\"col-sm-10 col-md-10 col-xl-10 p-3\\\">\\r\\n\\r\\n      <!-- <ul>\\r\\n        <li *ngFor=\\\"let item of countries; let i = index\\\">\\r\\n          {{item.name}}\\r\\n          {{i}}\\r\\n        </li>\\r\\n      </ul> -->\\r\\n        <ng-select class=\\\"mb-2 form-control\\\" [items]=\\\"countries\\\"\\r\\n          bindLabel=\\\"name\\\"\\r\\n          [(ngModel)]=\\\"country\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          dropdownPosition=\\\"botom\\\"\\r\\n          (change)=\\\"countryChange($event)\\\"\\r\\n          [searchable]=\\\"true\\\"\\r\\n        >\\r\\n        </ng-select>\\r\\n      <div class=\\\"divider m-0 d-md-none d-sm-block\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3 card\\\">\\r\\n    <div class=\\\"card-header-tab card-header\\\">\\r\\n      <div class=\\\"card-header-title font-size-lg text-capitalize font-weight-normal\\\">\\r\\n        <i class=\\\"header-icon lnr-charts icon-gradient bg-happy-green\\\"> </i>\\r\\n        In {{country.name}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"no-gutters row\\\">\\r\\n      <div class=\\\"col-sm-6 col-md-3 col-xl-3\\\">\\r\\n        <div class=\\\"card no-shadow rm-border bg-transparent widget-chart text-left\\\">\\r\\n          <div class=\\\"icon-wrapper rounded-circle\\\">\\r\\n            <div class=\\\"icon-wrapper-bg opacity-10 bg-yellow\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"widget-chart-content\\\">\\r\\n            <div class=\\\"widget-subheading\\\">Active cases</div>\\r\\n            <div class=\\\"widget-numbers\\\">{{totalActiveCases | number }}</div>\\r\\n            <div class=\\\"widget-description opacity-8 text-focus\\\">\\r\\n              <div class=\\\"d-inline text-danger pr-1\\\">\\r\\n                <fa name=\\\"angle-down\\\"></fa>\\r\\n                <span class=\\\"pl-1\\\">\\r\\n                  {{(totalActiveCases / totalPopulation) * 100 | number : '1.2-2'}}%\\r\\n                </span>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"divider m-0 d-md-none d-sm-block\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6 col-md-3 col-xl-3\\\">\\r\\n        <div class=\\\"card no-shadow rm-border bg-transparent widget-chart text-left\\\">\\r\\n          <div class=\\\"icon-wrapper rounded-circle\\\">\\r\\n            <div class=\\\"icon-wrapper-bg opacity-10 bg-warning\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"widget-chart-content\\\">\\r\\n            <div class=\\\"widget-subheading\\\">Confirmed cases</div>\\r\\n            <div class=\\\"widget-numbers\\\">{{totalConfirmedCases | number }}</div>\\r\\n            <div class=\\\"widget-description opacity-8 text-focus\\\">\\r\\n              <div class=\\\"d-inline text-danger pr-1\\\">\\r\\n                <fa name=\\\"angle-down\\\"></fa>\\r\\n                <span class=\\\"pl-1\\\">\\r\\n                  {{(totalConfirmedCases / totalPopulation) * 100 | number : '1.2-2'}}%\\r\\n                </span>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"divider m-0 d-md-none d-sm-block\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6 col-md-3 col-xl-3\\\">\\r\\n        <div class=\\\"card no-shadow rm-border bg-transparent widget-chart text-left\\\">\\r\\n          <div class=\\\"icon-wrapper rounded-circle bg-success\\\">\\r\\n            <div class=\\\"icon-wrapper-bg opacity-9\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"widget-chart-content\\\">\\r\\n            <div class=\\\"widget-subheading\\\">Recovered cases</div>\\r\\n            <div class=\\\"widget-numbers\\\"><span>{{totalRecoveredCases | number}}</span></div>\\r\\n            <div class=\\\"widget-description opacity-8 text-focus\\\">\\r\\n              Decreased Rate:\\r\\n              <span class=\\\"text-info pl-1\\\">\\r\\n                  <fa name=\\\"angle-down\\\"></fa>\\r\\n                  <span class=\\\"pl-1\\\">\\r\\n                      {{(totalRecoveredCases / totalConfirmedCases) * 100 | number : '1.2-2'}}%\\r\\n                  </span>\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"divider m-0 d-md-none d-sm-block\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-12 col-md-3 col-xl-3\\\">\\r\\n        <div class=\\\"card no-shadow rm-border bg-transparent widget-chart text-left\\\">\\r\\n          <div class=\\\"icon-wrapper rounded-circle\\\">\\r\\n            <div class=\\\"icon-wrapper-bg opacity-9 bg-danger\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"widget-chart-content\\\">\\r\\n            <div class=\\\"widget-subheading\\\">Fatal cases</div>\\r\\n            <div class=\\\"widget-numbers text-red\\\"><span>{{totalDeathCases | number}}</span></div>\\r\\n            <div class=\\\"widget-description text-errors\\\">\\r\\n              Decreased Rate\\r\\n              <span class=\\\"text-warning pl-1\\\">\\r\\n                  <fa name=\\\"angle-up\\\"></fa>\\r\\n                  <span class=\\\"pl-1\\\">\\r\\n                      {{(totalDeathCases / totalConfirmedCases) * 100 | number : '1.2-2'}}%\\r\\n                  </span>\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-lg-6\\\">\\r\\n      <div class=\\\"card main-card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          {{country.name}} - Confirmed Vs Death Cases\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <app-confirmed-actual-vs-death-actual></app-confirmed-actual-vs-death-actual>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12 col-lg-6\\\">\\r\\n        <div class=\\\"card main-card mb-3\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            Comparison among Top countries confirmed cases vs India & China\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <app-top-three-countries-confirmed-cases></app-top-three-countries-confirmed-cases>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>  \\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"selectedCountry.index === 41\\\">\\r\\n    <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n      <div class=\\\"card main-card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          {{country.name}} - Active Actual vs Active Prediction Cases \\r\\n        </div>\\r\\n        <div class=\\\"card-body margin-auto\\\">\\r\\n          <app-active-actual-vs-active-prediction></app-active-actual-vs-active-prediction>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"selectedCountry.index <= 4\\\">\\r\\n    <div class=\\\"col-sm-12 col-lg-6\\\">\\r\\n      <div class=\\\"card main-card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          {{country.name}} - Active Actual vs Active Prediction Cases \\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <app-active-actual-vs-active-prediction></app-active-actual-vs-active-prediction>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12 col-lg-6\\\">\\r\\n      <div class=\\\"card main-card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          {{country.name}} - Confirmed Actual Vs Confirmed Prediction \\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <app-confirmed-actual-vs-confirmed-predictions></app-confirmed-actual-vs-confirmed-predictions>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"selectedCountry.index <= 4\\\">\\r\\n    <div class=\\\"col-sm-12 col-lg-6\\\">\\r\\n      <div class=\\\"card main-card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          {{country.name}} - Recovery actual vs Recovery Prediction Cases\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <app-recovery-actual-vs-recovery-prediction></app-recovery-actual-vs-recovery-prediction>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12 col-lg-6\\\">\\r\\n      <div class=\\\"card main-card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          {{country.name}} - Death Actual vs Death Prediction Cases \\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <app-death-actual-vs-death-prediction></app-death-actual-vs-death-prediction>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport {Color} from 'ng2-charts/ng2-charts';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { CountryIndexPair } from '../../../constants/global-enums';\r\nimport activeData from '../../../../data/actual/active-data.json';\r\nimport confirmedData from '../../../../data/actual/confirmed-data.json';\r\nimport deathsData from '../../../../data/actual/deaths-data.json';\r\nimport recoveredData from '../../../../data/actual/recovery-data.json';\r\nimport countryDataset from '../../../../data/countries-dataset.json';\r\n\r\n@Component({\r\n  selector: 'app-analytics',\r\n  templateUrl: './analytics.component.html',\r\n})\r\nexport class AnalyticsComponent implements OnInit {\r\n  public selectedCountry: any;\r\n  public countries: any;\r\n  public country: any;\r\n  public ASSETS_PATH = './assets';\r\n  public confirmedData = confirmedData;\r\n\r\n  public totalActiveCases: number;\r\n  public totalConfirmedCases: number;\r\n  public totalDeathCases: number;\r\n  public totalRecoveredCases: number;\r\n\r\n  public totalPopulation: number;\r\n\r\n  constructor(\r\n    private commonService: CommonService\r\n  ) {\r\n    this.countries = [];\r\n    this.getCountries();\r\n    this.country = this.countries[4];\r\n    this.selectedCountry = this.country;\r\n    this.totalPopulation = countryDataset[4].population;\r\n  }\r\n\r\n  ngOnInit() { \r\n    this.commonService.publishSelectedCountry(CountryIndexPair[this.selectedCountry.name]);  \r\n    this.totalActiveCases = this.getTotalActiveCases();\r\n    this.totalConfirmedCases = this.getTotalConfirmedCases();\r\n    this.totalDeathCases = this.getTotalDeathCases();\r\n    this.totalRecoveredCases = this.getTotalRecoveredCases();\r\n  }\r\n\r\n  private getCountries() {\r\n    // countryDataset.sort((a,b) => a.country_name < b.country_name ? -1 : 1);;\r\n    for(let i =0; i<countryDataset.length; i++) {\r\n      this.countries.push({name: countryDataset[i].country_name, index: i});      \r\n    }\r\n    \r\n  }\r\n\r\n  public countryChange(event) {\r\n    this.selectedCountry = event;\r\n    this.totalPopulation = countryDataset[event.index].population;\r\n    this.commonService.publishSelectedCountry(CountryIndexPair[this.selectedCountry.name]);    \r\n    this.totalActiveCases = this.getTotalActiveCases();\r\n    this.totalConfirmedCases = this.getTotalConfirmedCases();\r\n    this.totalDeathCases = this.getTotalDeathCases();\r\n    this.totalRecoveredCases = this.getTotalRecoveredCases();\r\n  }\r\n\r\n  private getTotalActiveCases(): number {\r\n    let lastdayIndex = activeData[`${CountryIndexPair[this.selectedCountry.name]}`].data.length - 1;\r\n    return activeData[`${CountryIndexPair[this.selectedCountry.name]}`].data[lastdayIndex].count;\r\n  }\r\n\r\n  private getTotalConfirmedCases(): number {\r\n    let lastdayIndex = confirmedData[`${CountryIndexPair[this.selectedCountry.name]}`].data.length - 1;\r\n    return confirmedData[`${CountryIndexPair[this.selectedCountry.name]}`].data[lastdayIndex].count;\r\n  }\r\n\r\n  private getTotalDeathCases(): number {\r\n    let lastdayIndex = deathsData[`${CountryIndexPair[this.selectedCountry.name]}`].data.length - 1;\r\n    return deathsData[`${CountryIndexPair[this.selectedCountry.name]}`].data[lastdayIndex].count;\r\n  }\r\n\r\n  private getTotalRecoveredCases(): number {\r\n    let lastdayIndex = recoveredData[`${CountryIndexPair[this.selectedCountry.name]}`].data.length - 1;\r\n    return recoveredData[`${CountryIndexPair[this.selectedCountry.name]}`].data[lastdayIndex].count;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"d-block\\\">\\n  <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n          [datasets]=\\\"lineChartData\\\"\\n          [labels]=\\\"lineChartLabels\\\"\\n          [options]=\\\"lineChartOptions\\\"\\n          [colors]=\\\"lineChartColors\\\"\\n          [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType\\\"\\n          [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table mt-3 table-condensed table-hover table-bordered\\\">\\n    <thead>\\n    <tr>\\n      <th *ngFor=\\\"let label of lineChartLabels\\\">{{label}}</th>\\n    </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let d of lineChartData; let i=index\\\" [class]=\\\"'line-'+i\\\">\\n      <td *ngFor=\\\"let label of lineChartLabels; let j=index\\\">{{d && d.data[j] | number}}</td>\\n    </tr>\\n  </table>\\n</div>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RlbW9QYWdlcy9EYXNoYm9hcmRzL2NoYXJ0cy9hY3RpdmUtYWN0dWFsLXZzLWFjdGl2ZS1wcmVkaWN0aW9uL2FjdGl2ZS1hY3R1YWwtdnMtYWN0aXZlLXByZWRpY3Rpb24uY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Color, Label } from 'ng2-charts';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport { CommonService } from '../../../../services/common.service';\nimport activeActualData from '../../../../../data/actual/active-data.json'\nimport { CountryIndexPair } from '../../../../constants/global-enums';\n\n\n\n@Component({\n  selector: 'app-active-actual-vs-active-prediction',\n  templateUrl: './active-actual-vs-active-prediction.component.html',\n  styleUrls: ['./active-actual-vs-active-prediction.component.sass']\n})\nexport class ActiveActualVsActivePredictionComponent implements OnInit {\n   // all data\n   private activeActualData: any = activeActualData;\n   private activePredictionsData: any;\n   \n   // monthly data\n   private activeActualMonthlyCases: any;\n   private activePredictionsMonthlyCases: any;\n \n   // selected country\n   private selectedCountryIndex;\n\n   private activeMonthlyDataIndexes: Array<number>;\n \n \n   private minYaxisActiveActualData: number;\n   private maxYaxisActiveActualData: number;\n   private minYaxisActivePredictionData: number;\n   private maxYaxisActivePredictionData: number;\n   private minYaxis: number;\n   private maxYaxis: number;\n \n \n   // chart data\n   public lineChartLabels: Label[];\n   public lineChartData: ChartDataSets[];\n   public lineChartOptions: (ChartOptions & { annotation: any }) = {\n     responsive: true,\n     scales: {\n       // We use this empty structure as a placeholder for dynamic theming.\n       xAxes: [\n         {\n           scaleLabel: {\n             display: true,\n             labelString: 'Over Time',\n             fontColor: '#F74300'\n           },            \n           ticks: {\n             fontColor: '#979797'\n           }\n         }\n       ],\n       yAxes: [\n         {\n           scaleLabel: {\n             display: true,\n             labelString: 'Active Cases',\n             fontColor: '#F74300'\n           },\n           gridLines: {\n             color: '#dcd7d7',\n           },            \n           ticks: {\n             fontColor: '#979797',\n             max : this.minYaxis,\n             min:  this.minYaxis,\n             stepSize: Math.round((this.minYaxis - this.minYaxis) / (this.activePredictionsMonthlyCases + 1))\n           }\n         }\n       ]\n     },\n     elements : { \n       line : { \n         tension : 0.7,\n         borderWidth: 1\n       }\n     },\n     plugins: {\n       datalabels: {\n         font: {\n           size: 11,\n           weight: 'bold',\n         },\n         offset: 3,\n         align: function(ctx) {\n           let idx = ctx.dataIndex;\n           let val = ctx.dataset.data[idx];\n           let datasets = ctx.chart.data.datasets;\n           let minVal = val;\n           let maxVal = val;\n           let i, ilen, ival;\n   \n           for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n             if (i === ctx.datasetIndex) {\n               continue;\n             }\n   \n             ival = datasets[i].data[idx];\n             minVal = minVal < ival ? minVal : ival;\n             maxVal = maxVal > ival ? maxVal : ival;\n   \n             if (val > minVal && val < maxVal) {\n               return 'center';\n             }\n           }\n   \n           return val <= minVal ? 'right' : 'end';\n         }\n       }\n     },\n     annotation: {\n       annotations: [\n       ],\n     },\n     layout: {\n     },\n     legend: {\n       display: true,\n       // labels:{\n       //   generateLabels: (chart) => {\n       //     chart.legend.afterFit = function () {\n       //       // this.height = this.height + 10;\n       //     }\n       //   }\n       // }\n     }\n   };\n   \n   public lineChartColors: Color[] = [\n     { \n       backgroundColor: 'rgba(0,0,0,0)',\n       borderColor: '#DA075F',\n       pointBackgroundColor: '#DA075F',\n       pointBorderColor: '#fff',\n       pointHoverBackgroundColor: '#fff',\n       pointHoverBorderColor: '#DA075F'\n     },\n     { \n       backgroundColor: 'rgba(0,0,0,0)',\n       borderColor: '#006300',\n       pointBackgroundColor: '#006300',\n       pointBorderColor: '#fff',\n       pointHoverBackgroundColor: '#fff',\n       pointHoverBorderColor: '#006300'\n     }\n   ];\n   public lineChartLegend = true;\n   public lineChartType = 'line';\n   public lineChartPlugins = [pluginAnnotations];\n \n   constructor(\n     private commonService: CommonService\n   ) {\n      this.commonService.selectedCountry$.subscribe((countryIndex) => {\n      this.activeActualMonthlyCases = [];\n      this.activePredictionsMonthlyCases = [];\n      this.lineChartLabels = [];\n      this.activeMonthlyDataIndexes = [];\n      \n      this.selectedCountryIndex = countryIndex;\n      this.readPredictionData();\n\n      this.lineChartData = [\n        { data: this.activeActualMonthlyCases, label: 'Actual Data' },\n        { data: this.activePredictionsMonthlyCases, label: 'Prediction Data' }\n      ];\n      //  console.log(this.activeActualMonthlyCases, this.activePredictionsMonthlyCases);\n     });\n   }\n \n   ngOnInit() {\n   }\n \n \n   private readPredictionData() {\n     const selectedCountryName = CountryIndexPair[this.selectedCountryIndex].toLowerCase();\n     import(`../../../../../data/predictions/${selectedCountryName}/active-data.json`)\n      .then(data => {\n       // JUST USE THE LIBRARY\n       this.activePredictionsData = data.default;\n       this.getActiveActualMonthlyData();\n       this.getActivePredictiveMonthlyData();  \n       this.getMinMaxXValue();\n      })\n      .catch(error => {\n       console.log(error);\n      });\n   }\n \n \n   // get monthly active-actual data\n   private getActiveActualMonthlyData() {\n     let count = 0;\n     let actualTotalCount = 0;\n     let PredictiveTotalCount = 0;\n     for(let i = 0; i < this.activeActualData[`${this.selectedCountryIndex}`].data.length; i++) {     \n        if (i === 0 || count === 30 || i === this.activeActualData[`${this.selectedCountryIndex}`].data.length - 1) {\n         actualTotalCount = parseInt(this.activeActualData[`${this.selectedCountryIndex}`].data[i].count, 10);          \n         this.activeActualMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n         this.activeMonthlyDataIndexes.push(i);\n         count = 0;\n         actualTotalCount = 0;\n         \n        }\n       count++;\n     }\n \n   }\n \n \n   // get monthly active-prediction data\n   private getActivePredictiveMonthlyData() {\n     let actualTotalCount = 0;\n     let PredictiveTotalCount = 0;\n     for(let i = 0; i < Object.keys(this.activePredictionsData).length; i++) {      \n        if (this.activeMonthlyDataIndexes.indexOf(i) > -1 || i === this.activePredictionsData.length - 1) {\n         actualTotalCount = parseInt(this.activePredictionsData[i]['Scored Labels'], 10)\n         this.activePredictionsMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n         this.lineChartLabels.push(this.commonService.addDays(new Date('01-22-2020'), parseInt(this.activePredictionsData[i]['Date'], 10)));\n         actualTotalCount = 0;\n      }\n     }\n     console.log(this.activeMonthlyDataIndexes, this.lineChartLabels);\n   }\n \n \n   private getMinMaxXValue() {\n     this.minYaxisActiveActualData = this.commonService.getMinimumValue(this.activeActualMonthlyCases);\n     this.maxYaxisActiveActualData = this.commonService.getMaximumValue(this.activeActualMonthlyCases);\n \n     this.minYaxisActivePredictionData = this.commonService.getMinimumValue(this.activePredictionsMonthlyCases);\n     this.maxYaxisActivePredictionData = this.commonService.getMaximumValue(this.activePredictionsMonthlyCases);\n \n     this.minYaxis = this.minYaxisActiveActualData < this.minYaxisActivePredictionData ? this.minYaxisActiveActualData : this.minYaxisActivePredictionData;\n \n     this.maxYaxis = this.maxYaxisActiveActualData > this.maxYaxisActivePredictionData ? this.maxYaxisActiveActualData : this.maxYaxisActivePredictionData;\n    //  console.log(this.minYaxisActiveActualData, this.minYaxisActivePredictionData, 'min = ', this.minYaxis);\n    //  console.log(this.maxYaxisActiveActualData, this.maxYaxisActivePredictionData, 'max = ', this.maxYaxis);\n   }\n\n\n\n}\n","module.exports = \"\\n<div class=\\\"d-block\\\"> \\n  <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n          [datasets]=\\\"lineChartData\\\"\\n          [labels]=\\\"lineChartLabels\\\"\\n          [options]=\\\"lineChartOptions\\\"\\n          [colors]=\\\"lineChartColors\\\"\\n          [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType\\\"\\n          [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table mt-3 table-condensed table-hover table-bordered\\\">\\n    <thead>\\n    <tr>\\n      <th *ngFor=\\\"let label of lineChartLabels\\\">{{label}}</th>\\n    </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let d of lineChartData; let i=index\\\" [class]=\\\"'line-'+i\\\">\\n      <td *ngFor=\\\"let label of lineChartLabels; let j=index\\\">{{d && d.data[j] | number}}</td>\\n    </tr>\\n  </table>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RlbW9QYWdlcy9EYXNoYm9hcmRzL2NoYXJ0cy9jb25maXJtZWQtYWN0dWFsLXZzLWNvbmZpcm1lZC1wcmVkaWN0aW9ucy9jb25maXJtZWQtYWN0dWFsLXZzLWNvbmZpcm1lZC1wcmVkaWN0aW9ucy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { CommonService } from '../../../../services/common.service';\nimport { CountryIndexPair } from '../../../../constants/global-enums';\nimport confirmedActualData from '../../../../../data/actual/confirmed-data.json';\n\n@Component({\n  selector: 'app-confirmed-actual-vs-confirmed-predictions',\n  templateUrl: './confirmed-actual-vs-confirmed-predictions.component.html',\n  styleUrls: ['./confirmed-actual-vs-confirmed-predictions.component.sass']\n})\nexport class ConfirmedActualVsConfirmedPredictionsComponent implements OnInit {\n\n  private confirmedActualData: any = confirmedActualData;\n  private confirmedPredictionsData: any;\n  private confirmedActualMonthlyData: any;\n  private confirmedPredictionsMonthlyData: any;\n  private confirmedActualMonthlyCases: any;\n  private confirmedPredictionsMonthlyCases: any;\n  public selectedCountryIndex: number;\n\n  private activeMonthlyDataIndexes: Array<number>;\n\n  public confirmedCases: Array<number> = [];\n\n  public lineChartData: ChartDataSets[] = [];\n  public days: Array<string> = [];\n  public lineChartLabels: Label[] = [];\n  private minYaxisConfirmedActualData: number;\n  private maxYaxisConfirmedActualData: number;\n  private minYaxisConfirmedPredictionsData: number;\n  private maxYaxisConfirmedPredictionsData: number;\n  private minYaxis: number;\n  private maxYaxis: number;\n\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    scales: {\n      // We use this empty structure as a placeholder for dynamic theming.\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Over Time',\n            fontColor: '#F74300'\n          },            \n          ticks: {\n            fontColor: '#979797'\n          }\n        }\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Confirmed Cases',\n            fontColor: '#F74300'\n          },\n          gridLines: {\n            color: '#dcd7d7',\n          },            \n          ticks: {\n            fontColor: '#979797',\n            max : this.minYaxis,\n            min:  this.minYaxis,\n            stepSize: Math.round((this.minYaxis - this.minYaxis) / (this.confirmedPredictionsMonthlyData + 1))\n          }\n        }\n      ]\n    },\n    elements : { \n      line : { \n        tension : 0.5,\n        borderWidth: 1\n      }\n    },\n    plugins: {\n      datalabels: {\n        font: {\n          size: 11,\n          weight: 'bold',\n        },\n        offset: 3,\n        align: function(ctx) {\n          let idx = ctx.dataIndex;\n          let val = ctx.dataset.data[idx];\n          let datasets = ctx.chart.data.datasets;\n          let minVal = val;\n          let maxVal = val;\n          let i, ilen, ival;\n  \n          for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n            if (i === ctx.datasetIndex) {\n              continue;\n            }\n  \n            ival = datasets[i].data[idx];\n            minVal = minVal < ival ? minVal : ival;\n            maxVal = maxVal > ival ? maxVal : ival;\n  \n            if (val > minVal && val < maxVal) {\n              return 'center';\n            }\n          }\n  \n          return val <= minVal ? 'right' : 'end';\n        }\n      }\n    },\n    annotation: {\n      annotations: [\n      ],\n    },\n    layout: {\n    },\n    legend: {\n      display: true,\n      // labels:{\n      //   generateLabels: (chart) => {\n      //     chart.legend.afterFit = function () {\n      //       // this.height = this.height + 10;\n      //     }\n      //   }\n      // }\n    }\n  };\n  \n  public lineChartColors: Color[] = [\n    { // orange\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#DA075F',\n      pointBackgroundColor: '#DA075F',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#DA075F'\n    },\n    { // blue\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#00BFFE',\n      pointBackgroundColor: '#00BFFE',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#00BFFE'\n    }\n  ];\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n  public lineChartPlugins = [pluginAnnotations];\n\n  @ViewChild(BaseChartDirective) chart: BaseChartDirective;\n\n  constructor(\n    private http: HttpClient,\n    private commonService: CommonService\n  ) {\n      this.commonService.selectedCountry$.subscribe((countryIndex) => {\n      this.confirmedActualMonthlyData = [];\n      this.confirmedPredictionsMonthlyData = [];\n      this.confirmedActualMonthlyCases = [];\n      this.confirmedPredictionsMonthlyCases = [];\n      this.lineChartLabels = [];\n      this.activeMonthlyDataIndexes = [];\n      \n      this.selectedCountryIndex = countryIndex;\n      this.readPredictionData();\n\n      this.lineChartData = [\n        { data: this.confirmedActualMonthlyCases, label: 'Confirmed Cases' },\n        { data: this.confirmedPredictionsMonthlyCases, label: 'Linear Regression Prediction' }\n      ];\n      // console.log(this.confirmedActualMonthlyCases, this.confirmedPredictionsMonthlyCases);\n    });\n  }\n\n  ngOnInit() {\n    \n  }\n\n  private readPredictionData() {\n    const selectedCountryName = CountryIndexPair[this.selectedCountryIndex].toLowerCase();\n    import(`../../../../../data/predictions/${selectedCountryName}/confirmed-data.json`)\n    .then(data => {\n      // JUST USE THE LIBRARY\n      this.confirmedPredictionsData = data.default;\n      this.getConfirmedActualMonthlyData();\n      this.getConfirmedPredictiveMonthlyData();  \n      this.getMinMaxXValue();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n\n  // get monthly confirmed-actual data\n  private getConfirmedActualMonthlyData() {\n    let count = 0;\n    let actualTotalCount = 0;\n    let PredictiveTotalCount = 0;\n    for(let i = 0; i < this.confirmedActualData[`${this.selectedCountryIndex}`].data.length; i++) {     \n      if (i === 0 || count === 30 || i === this.confirmedActualData[`${this.selectedCountryIndex}`].data.length - 1) {\n        actualTotalCount = parseInt(this.confirmedActualData[`${this.selectedCountryIndex}`].data[i].count, 10);\n        this.confirmedActualMonthlyData.push({'date': this.confirmedActualData[`${this.selectedCountryIndex}`].data[i].date, actualTotalCount});\n        this.confirmedActualMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n        this.activeMonthlyDataIndexes.push(i);\n        count = 0;\n        actualTotalCount = 0;\n      }  \n      count++;\n    }\n  }\n\n\n  // get monthly confirmed-predictive data\n  private getConfirmedPredictiveMonthlyData() {   \n    let actualTotalCount = 0;\n    let PredictiveTotalCount = 0;\n    for(let i = 0; i < Object.keys(this.confirmedPredictionsData).length; i++) {      \n      if (this.activeMonthlyDataIndexes.indexOf(i) > -1 || i === Object.keys(this.confirmedPredictionsData).length - 1) {\n        actualTotalCount = parseInt(this.confirmedPredictionsData[i]['Scored Labels'], 10);\n\n        this.confirmedPredictionsMonthlyData.push({'date': this.commonService.addDays(new Date('01-22-2020'), parseInt(this.confirmedPredictionsData[i].Date, 10)), actualTotalCount});\n        \n        this.confirmedPredictionsMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n        this.lineChartLabels.push(this.commonService.addDays(new Date('01-22-2020'), parseInt(this.confirmedPredictionsData[i].Date, 10)));       \n        actualTotalCount = 0;\n      }\n    }\n    console.log(this.activeMonthlyDataIndexes, this.lineChartLabels);\n  }\n\n\n  private getMinMaxXValue() {\n    this.minYaxisConfirmedActualData = this.getMinimumValue(this.confirmedActualMonthlyData, 'actualTotalCount');\n    this.maxYaxisConfirmedActualData = this.getMaximumValue(this.confirmedActualMonthlyData, 'actualTotalCount');\n\n    this.minYaxisConfirmedPredictionsData = this.getMinimumValue(this.confirmedPredictionsMonthlyData, 'actualTotalCount');\n    this.maxYaxisConfirmedPredictionsData = this.getMaximumValue(this.confirmedPredictionsMonthlyData, 'actualTotalCount');\n    this.minYaxis = this.minYaxisConfirmedActualData < this.minYaxisConfirmedPredictionsData ? this.minYaxisConfirmedActualData : this.minYaxisConfirmedPredictionsData;\n    this.maxYaxis = this.maxYaxisConfirmedActualData > this.maxYaxisConfirmedPredictionsData ? this.maxYaxisConfirmedActualData : this.maxYaxisConfirmedPredictionsData;\n    // console.log(this.minYaxisConfirmedActualData, this.minYaxisConfirmedPredictionsData, 'min = ', this.minYaxis);\n    // console.log(this.maxYaxisConfirmedActualData, this.maxYaxisConfirmedPredictionsData, 'max = ', this.maxYaxis);\n  }\n\n\n  private getMinimumValue(data: Array<object>, keyValue: string) {\n    const minVal = data.reduce((prev, current) => { \n        return (prev[`${keyValue}`] < current[`${keyValue}`]) ? prev : current; \n    });\n    return Math.round(minVal[`${keyValue}`]);\n  }\n\n  private getMaximumValue(data: Array<object>, keyValue: string) {\n    const maxVal = data.reduce((prev, current) => { \n      return (prev[`${keyValue}`] > current[`${keyValue}`]) ? prev : current; \n    });\n    return Math.round(maxVal[`${keyValue}`]);\n  }\n\n\n  \n\n  // public randomize(): void {\n  //   for (let i = 0; i < this.lineChartData.length; i++) {\n  //     for (let j = 0; j < this.lineChartData[i].data.length; j++) {\n  //       this.lineChartData[i].data[j] = this.generateNumber(i);\n  //     }\n  //   }\n  //   this.chart.update();\n  // }\n\n  // private generateNumber(i: number) {\n  //   return Math.floor((Math.random() * (i < 2 ? 100 : 1000)) + 1);\n  // }\n\n  // // events\n  // public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n  //   console.log(event, active);\n  // }\n\n  // public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n  //   console.log(event, active);\n  // }\n\n  // public hideOne() {\n  //   const isHidden = this.chart.isDatasetHidden(1);\n  //   this.chart.hideDataset(1, !isHidden);\n  // }\n\n  // public pushOne() {\n  //   this.lineChartData.forEach((x, i) => {\n  //     const num = this.generateNumber(i);\n  //     const data: number[] = x.data as number[];\n  //     data.push(num);\n  //   });\n  //   this.lineChartLabels.push(`Label ${this.lineChartLabels.length}`);\n  // }\n\n  // public changeColor() {\n  //   this.lineChartColors[2].borderColor = 'green';\n  //   this.lineChartColors[2].backgroundColor = `rgba(0, 255, 0, 0.3)`;\n  // }\n\n  // public changeLabel() {\n  //   this.lineChartLabels[2] = ['1st Line', '2nd Line'];\n  //   // this.chart.update();\n  // }\n\n}\n","module.exports = \"<div class=\\\"d-block\\\">\\n  <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n          [datasets]=\\\"lineChartData\\\"\\n          [labels]=\\\"lineChartLabels\\\"\\n          [options]=\\\"lineChartOptions\\\"\\n          [colors]=\\\"lineChartColors\\\"\\n          [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType\\\"\\n          [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table mt-3 table-condensed table-hover table-bordered\\\">\\n    <thead>\\n    <tr>\\n      <th *ngFor=\\\"let label of lineChartLabels\\\">{{label}}</th>\\n    </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let d of lineChartData; let i=index\\\" [class]=\\\"'line-'+i\\\">\\n      <td *ngFor=\\\"let label of lineChartLabels; let j=index\\\">{{d && d.data[j] | number}}</td>\\n    </tr>\\n  </table>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RlbW9QYWdlcy9EYXNoYm9hcmRzL2NoYXJ0cy9jb25maXJtZWQtYWN0dWFsLXZzLWRlYXRoLWFjdHVhbC9jb25maXJtZWQtYWN0dWFsLXZzLWRlYXRoLWFjdHVhbC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport confirmedActualData from '../../../../../data/actual/confirmed-data.json';\nimport deathActualData from '../../../../../data/actual/deaths-data.json';\nimport { CommonService } from '../../../../services/common.service';\nimport { Label, Color } from 'ng2-charts';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-confirmed-actual-vs-death-actual',\n  templateUrl: './confirmed-actual-vs-death-actual.component.html',\n  styleUrls: ['./confirmed-actual-vs-death-actual.component.sass']\n})\nexport class ConfirmedActualVsDeathActualComponent implements OnInit {\n\n  // all data\n  private confirmedActualData: any = confirmedActualData;\n  private deathActualData: any = deathActualData;\n\n  // monthly data\n  private confirmedActualMonthlyCases: any;\n  private deathActualMonthlyCases: any;\n\n  // selected country\n  private selectedCountryIndex;\n\n\n  private minYaxisConfirmedActualData: number;\n  private maxYaxisConfirmedActualData: number;\n  private minYaxisDeathActualData: number;\n  private maxYaxisDeathActualData: number;\n  private minYaxis: number;\n  private maxYaxis: number;\n\n  // chart data\n  public lineChartLabels: Label[];\n  public lineChartData: ChartDataSets[];\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    scales: {\n      // We use this empty structure as a placeholder for dynamic theming.\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Over Time',\n            fontColor: '#F74300'\n          },            \n          ticks: {\n            fontColor: '#979797'\n          }\n        }\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Confirmed Cases',\n            fontColor: '#F74300'\n          },\n          gridLines: {\n            color: '#dcd7d7',\n          },            \n          ticks: {\n            fontColor: '#979797',\n            max : this.minYaxis,\n            min:  this.minYaxis,\n            stepSize: Math.round((this.minYaxis - this.minYaxis) / (this.deathActualMonthlyCases + 1))\n          }\n        }\n      ]\n    },\n    elements : { \n      line : { \n        tension : 0.7,\n        borderWidth: 1\n      }\n    },\n    plugins: {\n      datalabels: {\n        font: {\n          size: 11,\n          weight: 'bold',\n        },\n        offset: 3,\n        align: function(ctx) {\n          let idx = ctx.dataIndex;\n          let val = ctx.dataset.data[idx];\n          let datasets = ctx.chart.data.datasets;\n          let minVal = val;\n          let maxVal = val;\n          let i, ilen, ival;\n  \n          for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n            if (i === ctx.datasetIndex) {\n              continue;\n            }\n  \n            ival = datasets[i].data[idx];\n            minVal = minVal < ival ? minVal : ival;\n            maxVal = maxVal > ival ? maxVal : ival;\n  \n            if (val > minVal && val < maxVal) {\n              return 'center';\n            }\n          }\n  \n          return val <= minVal ? 'right' : 'end';\n        }\n      }\n    },\n    annotation: {\n      annotations: [\n      ],\n    },\n    layout: {\n    },\n    legend: {\n      display: true,\n      // labels:{\n      //   generateLabels: (chart) => {\n      //     chart.legend.afterFit = function () {\n      //       // this.height = this.height + 10;\n      //     }\n      //   }\n      // }\n    }\n  };\n  \n  public lineChartColors: Color[] = [\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#00BFFE',\n      pointBackgroundColor: '#00BFFE',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#00BFFE'\n    },\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#FE0002',\n      pointBackgroundColor: '#FE0002',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#FE0002'\n    }\n  ];\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n  public lineChartPlugins = [pluginAnnotations];\n\n  \n\n\n\n  constructor(\n    private commonService: CommonService,\n    private datepipe: DatePipe\n  ) {\n    this.commonService.selectedCountry$.subscribe((countryIndex) => {\n      this.confirmedActualMonthlyCases = [];\n      this.deathActualMonthlyCases = [];\n      this.lineChartLabels = [];\n      \n      this.selectedCountryIndex = countryIndex;\n\n      this.getConfirmedActualMonthlyData();\n      this.getDeathActualMonthlyData();\n      this.getMinMaxXValue();\n\n      // console.log(this.confirmedActualMonthlyCases, this.deathActualMonthlyCases);\n\n      this.lineChartData = [\n        { data: this.confirmedActualMonthlyCases, label: 'Confirmed Cases' },\n        { data: this.deathActualMonthlyCases, label: 'Death Cases' }\n      ];\n    });\n  }\n\n  ngOnInit() {\n  }\n\n\n    // get monthly confirmed-actual data\n    private getConfirmedActualMonthlyData() {\n      let count = 0;\n      let actualTotalCount = 0;\n      let PredictiveTotalCount = 0;\n      for(let i = 0; i < this.confirmedActualData[`${this.selectedCountryIndex}`].data.length; i++) {     \n\n        if (i === 0 || count === 30 || i === this.confirmedActualData[`${this.selectedCountryIndex}`].data.length - 1) {\n          actualTotalCount = parseInt(this.confirmedActualData[`${this.selectedCountryIndex}`].data[i].count, 10);          \n          this.confirmedActualMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n          count = 0;\n          actualTotalCount = 0;\n        }  \n        count++;\n      }\n      // console.log(this.confirmedActualMonthlyCases);\n    }\n  \n  \n    // get monthly death-actual data\n    private getDeathActualMonthlyData() {    \n      let count = 0;\n      let actualTotalCount = 0;\n      let PredictiveTotalCount = 0;\n      let labels;\n      for(let i = 0; i < this.deathActualData[`${this.selectedCountryIndex}`].data.length; i++) {      \n        if (i === 0 || count === 30 || i === this.deathActualData[`${this.selectedCountryIndex}`].data.length - 1) {\n          actualTotalCount = parseInt(this.deathActualData[`${this.selectedCountryIndex}`].data[i].count, 10);\n          this.deathActualMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n          labels = this.datepipe.transform(new Date(this.deathActualData[`${this.selectedCountryIndex}`].data[i].date), 'M/dd/yyyy')\n          this.lineChartLabels.push(labels);\n          count = 0;\n          actualTotalCount = 0;\n        }\n        count++;\n      }\n    }\n\n    private getMinMaxXValue() {\n      this.minYaxisConfirmedActualData = this.commonService.getMinimumValue(this.confirmedActualMonthlyCases);\n      this.maxYaxisConfirmedActualData = this.commonService.getMaximumValue(this.confirmedActualMonthlyCases);\n\n      this.minYaxisDeathActualData = this.commonService.getMinimumValue(this.deathActualMonthlyCases);\n      this.maxYaxisDeathActualData = this.commonService.getMaximumValue(this.deathActualMonthlyCases);\n      this.minYaxis = this.minYaxisConfirmedActualData < this.minYaxisDeathActualData ? this.minYaxisConfirmedActualData : this.minYaxisDeathActualData;\n      this.maxYaxis = this.maxYaxisConfirmedActualData > this.maxYaxisDeathActualData ? this.maxYaxisConfirmedActualData : this.maxYaxisDeathActualData;\n      // console.log(this.minYaxisConfirmedActualData, this.minYaxisDeathActualData, 'min = ', this.minYaxis);\n      // console.log(this.maxYaxisConfirmedActualData, this.maxYaxisDeathActualData, 'max = ', this.maxYaxis);\n    }\n  \n\n}\n","module.exports = \"<div class=\\\"d-block\\\">\\n  <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n          [datasets]=\\\"lineChartData\\\"\\n          [labels]=\\\"lineChartLabels\\\"\\n          [options]=\\\"lineChartOptions\\\"\\n          [colors]=\\\"lineChartColors\\\"\\n          [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType\\\"\\n          [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table mt-3 table-condensed table-hover table-bordered\\\">\\n    <thead>\\n    <tr>\\n      <th *ngFor=\\\"let label of lineChartLabels\\\">{{label}}</th>\\n    </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let d of lineChartData; let i=index\\\" [class]=\\\"'line-'+i\\\">\\n      <td *ngFor=\\\"let label of lineChartLabels; let j=index\\\">{{d && d.data[j] | number}}</td>\\n    </tr>\\n  </table>\\n</div>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RlbW9QYWdlcy9EYXNoYm9hcmRzL2NoYXJ0cy9kZWF0aC1hY3R1YWwtdnMtZGVhdGgtcHJlZGljdGlvbi9kZWF0aC1hY3R1YWwtdnMtZGVhdGgtcHJlZGljdGlvbi5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Color, Label } from 'ng2-charts';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport { CommonService } from '../../../../services/common.service';\nimport deathActualData from '../../../../../data/actual/deaths-data.json'\nimport { CountryIndexPair } from '../../../../constants/global-enums';\n\n\n\n@Component({\n  selector: 'app-death-actual-vs-death-prediction',\n  templateUrl: './death-actual-vs-death-prediction.component.html',\n  styleUrls: ['./death-actual-vs-death-prediction.component.sass']\n})\nexport class DeathActualVsDeathPredictionComponent implements OnInit {\n\n   // all data\n   private deathActualData: any = deathActualData;\n   private deathPredictionsData: any;\n   \n   // monthly data\n   private deathActualMonthlyCases: any;\n   private deathPredictionsMonthlyCases: any;\n \n   // selected country\n   private selectedCountryIndex;\n   private activeMonthlyDataIndexes: Array<number>;\n \n \n   private minYaxisDeathActualData: number;\n   private maxYaxisDeathActualData: number;\n   private minYaxisDeathPredictionData: number;\n   private maxYaxisDeathPredictionData: number;\n   private minYaxis: number;\n   private maxYaxis: number;\n \n \n   // chart data\n   public lineChartLabels: Label[];\n   public lineChartData: ChartDataSets[];\n   public lineChartOptions: (ChartOptions & { annotation: any }) = {\n     responsive: true,\n     scales: {\n       // We use this empty structure as a placeholder for dynamic theming.\n       xAxes: [\n         {\n           scaleLabel: {\n             display: true,\n             labelString: 'Over Time',\n             fontColor: '#F74300'\n           },            \n           ticks: {\n             fontColor: '#979797'\n           }\n         }\n       ],\n       yAxes: [\n         {\n           scaleLabel: {\n             display: true,\n             labelString: 'Death Cases',\n             fontColor: '#F74300'\n           },\n           gridLines: {\n             color: '#dcd7d7',\n           },            \n           ticks: {\n             fontColor: '#979797',\n             max : this.minYaxis,\n             min:  this.minYaxis,\n             stepSize: Math.round((this.minYaxis - this.minYaxis) / (this.deathPredictionsMonthlyCases + 1))\n           }\n         }\n       ]\n     },\n     elements : { \n       line : { \n         tension : 0.7,\n         borderWidth: 1\n       }\n     },\n     plugins: {\n       datalabels: {\n         font: {\n           size: 11,\n           weight: 'bold',\n         },\n         offset: 3,\n         align: function(ctx) {\n           let idx = ctx.dataIndex;\n           let val = ctx.dataset.data[idx];\n           let datasets = ctx.chart.data.datasets;\n           let minVal = val;\n           let maxVal = val;\n           let i, ilen, ival;\n   \n           for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n             if (i === ctx.datasetIndex) {\n               continue;\n             }\n   \n             ival = datasets[i].data[idx];\n             minVal = minVal < ival ? minVal : ival;\n             maxVal = maxVal > ival ? maxVal : ival;\n   \n             if (val > minVal && val < maxVal) {\n               return 'center';\n             }\n           }\n   \n           return val <= minVal ? 'right' : 'end';\n         }\n       }\n     },\n     annotation: {\n       annotations: [\n       ],\n     },\n     layout: {\n     },\n     legend: {\n       display: true,\n       // labels:{\n       //   generateLabels: (chart) => {\n       //     chart.legend.afterFit = function () {\n       //       // this.height = this.height + 10;\n       //     }\n       //   }\n       // }\n     }\n   };\n   \n   public lineChartColors: Color[] = [\n     { \n       backgroundColor: 'rgba(0,0,0,0)',\n       borderColor: '#DA075F',\n       pointBackgroundColor: '#DA075F',\n       pointBorderColor: '#fff',\n       pointHoverBackgroundColor: '#fff',\n       pointHoverBorderColor: '#DA075F'\n     },\n     { \n       backgroundColor: 'rgba(0,0,0,0)',\n       borderColor: '#006300',\n       pointBackgroundColor: '#006300',\n       pointBorderColor: '#fff',\n       pointHoverBackgroundColor: '#fff',\n       pointHoverBorderColor: '#006300'\n     }\n   ];\n   public lineChartLegend = true;\n   public lineChartType = 'line';\n   public lineChartPlugins = [pluginAnnotations];\n \n   constructor(\n     private commonService: CommonService\n   ) {\n       this.commonService.selectedCountry$.subscribe((countryIndex) => {\n       this.deathActualMonthlyCases = [];\n       this.deathPredictionsMonthlyCases = [];\n       this.lineChartLabels = [];\n       this.activeMonthlyDataIndexes = [];\n       \n       this.selectedCountryIndex = countryIndex;\n       this.readPredictionData();\n \n       this.lineChartData = [\n         { data: this.deathActualMonthlyCases, label: 'Actual Data' },\n         { data: this.deathPredictionsMonthlyCases, label: 'Prediction Data' }\n       ];\n      //  console.log(this.deathActualMonthlyCases, this.deathPredictionsMonthlyCases);\n     });\n   }\n \n   ngOnInit() {\n   }\n \n \n   private readPredictionData() {\n     const selectedCountryName = CountryIndexPair[this.selectedCountryIndex].toLowerCase();\n     import(`../../../../../data/predictions/${selectedCountryName}/death-data.json`)\n     .then(data => {\n       // JUST USE THE LIBRARY\n       this.deathPredictionsData = data.default;\n       this.getDeathActualMonthlyData();\n       this.getDeathPredictiveMonthlyData();  \n       this.getMinMaxXValue();\n     })\n     .catch(error => {\n       console.log(error);\n     });\n   }\n \n \n   // get monthly Death-actual data\n   private getDeathActualMonthlyData() {\n     let count = 0;\n     let actualTotalCount = 0;\n     let PredictiveTotalCount = 0;\n     for(let i = 0; i < this.deathActualData[`${this.selectedCountryIndex}`].data.length; i++) {     \n       if (i === 0 || count === 30 || i === this.deathActualData[`${this.selectedCountryIndex}`].data.length - 1) {\n         actualTotalCount = parseInt(this.deathActualData[`${this.selectedCountryIndex}`].data[i].count, 10);          \n         this.deathActualMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n         this.activeMonthlyDataIndexes.push(i);\n         count = 0;\n         actualTotalCount = 0;\n       }  \n       count++;\n     }\n \n   }\n \n \n   // get monthly death-prediction data\n   private getDeathPredictiveMonthlyData() { \n     let actualTotalCount = 0;\n     let PredictiveTotalCount = 0;\n     for(let i = 0; i < Object.keys(this.deathPredictionsData).length; i++) {      \n       if (this.activeMonthlyDataIndexes.indexOf(i) > -1 || i === Object.keys(this.deathPredictionsData).length - 1) {\n         actualTotalCount = parseInt(this.deathPredictionsData[i]['Scored Labels'], 10)\n         this.deathPredictionsMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n         this.lineChartLabels.push(this.commonService.addDays(new Date('01-22-2020'), parseInt(this.deathPredictionsData[i].Date, 10)));\n         actualTotalCount = 0;\n       }  \n     }\n     console.log(this.activeMonthlyDataIndexes, this.lineChartLabels);\n   }\n \n \n   private getMinMaxXValue() {\n    this.minYaxisDeathActualData = this.commonService.getMinimumValue(this.deathActualMonthlyCases);\n    this.maxYaxisDeathActualData = this.commonService.getMaximumValue(this.deathActualMonthlyCases);\n\n    this.minYaxisDeathPredictionData = this.commonService.getMinimumValue(this.deathPredictionsMonthlyCases);\n    this.maxYaxisDeathPredictionData = this.commonService.getMaximumValue(this.deathPredictionsMonthlyCases);\n\n    this.minYaxis = this.minYaxisDeathActualData < this.minYaxisDeathPredictionData ? this.minYaxisDeathActualData : this.minYaxisDeathPredictionData;\n\n    this.maxYaxis = this.maxYaxisDeathActualData > this.maxYaxisDeathPredictionData ? this.maxYaxisDeathActualData : this.maxYaxisDeathPredictionData;\n    //  console.log(this.minYaxisDeathActualData, this.minYaxisDeathPredictionData, 'min = ', this.minYaxis);\n    //  console.log(this.maxYaxisDeathActualData, this.maxYaxisDeathPredictionData, 'max = ', this.maxYaxis);\n   }\n}\n","module.exports = \"<div class=\\\"d-block\\\"> \\n  <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n          [datasets]=\\\"lineChartData\\\"\\n          [labels]=\\\"lineChartLabels\\\"\\n          [options]=\\\"lineChartOptions\\\"\\n          [colors]=\\\"lineChartColors\\\"\\n          [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType\\\"\\n          [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table mt-3 table-condensed table-hover table-bordered\\\">\\n    <thead>\\n    <tr>\\n      <th *ngFor=\\\"let label of lineChartLabels\\\">{{label}}</th>\\n    </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let d of lineChartData; let i=index\\\" [class]=\\\"'line-'+i\\\">\\n      <td *ngFor=\\\"let label of lineChartLabels; let j=index\\\">{{d && d.data[j] | number}}</td>\\n    </tr>\\n  </table>\\n</div>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RlbW9QYWdlcy9EYXNoYm9hcmRzL2NoYXJ0cy9yZWNvdmVyeS1hY3R1YWwtdnMtcmVjb3ZlcnktcHJlZGljdGlvbi9yZWNvdmVyeS1hY3R1YWwtdnMtcmVjb3ZlcnktcHJlZGljdGlvbi5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Color, Label } from 'ng2-charts';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport { CommonService } from '../../../../services/common.service';\nimport recoveryActualData from '../../../../../data/actual/recovery-data.json'\nimport { CountryIndexPair } from '../../../../constants/global-enums';\n\n\n@Component({\n  selector: 'app-recovery-actual-vs-recovery-prediction',\n  templateUrl: './recovery-actual-vs-recovery-prediction.component.html',\n  styleUrls: ['./recovery-actual-vs-recovery-prediction.component.sass']\n})\nexport class RecoveryActualVsRecoveryPredictionComponent implements OnInit {\n\n  // all data\n  private recoveryActualData: any = recoveryActualData;\n  private recoveryPredictionsData: any;\n  \n  // monthly data\n  private recoveryActualMonthlyCases: any;\n  private recoveryPredictionsMonthlyCases: any;\n\n  // selected country\n  private selectedCountryIndex;\n\n  private activeMonthlyDataIndexes: Array<number>;\n\n\n  private minYaxisRecoveryActualData: number;\n  private maxYaxisRecoveryActualData: number;\n  private minYaxisRecoveryPredictionData: number;\n  private maxYaxisRecoveryPredictionData: number;\n  private minYaxis: number;\n  private maxYaxis: number;\n\n\n  // chart data\n  public lineChartLabels: Label[];\n  public lineChartData: ChartDataSets[];\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    scales: {\n      // We use this empty structure as a placeholder for dynamic theming.\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Over Time',\n            fontColor: '#F74300'\n          },            \n          ticks: {\n            fontColor: '#979797'\n          }\n        }\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Recovery Cases',\n            fontColor: '#F74300'\n          },\n          gridLines: {\n            color: '#dcd7d7',\n          },            \n          ticks: {\n            fontColor: '#979797',\n            max : this.minYaxis,\n            min:  this.minYaxis,\n            stepSize: Math.round((this.minYaxis - this.minYaxis) / (this.recoveryPredictionsMonthlyCases + 1))\n          }\n        }\n      ]\n    },\n    elements : { \n      line : { \n        tension : 0.7,\n        borderWidth: 1\n      }\n    },\n    plugins: {\n      datalabels: {\n        font: {\n          size: 11,\n          weight: 'bold',\n        },\n        offset: 3,\n        align: function(ctx) {\n          let idx = ctx.dataIndex;\n          let val = ctx.dataset.data[idx];\n          let datasets = ctx.chart.data.datasets;\n          let minVal = val;\n          let maxVal = val;\n          let i, ilen, ival;\n  \n          for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n            if (i === ctx.datasetIndex) {\n              continue;\n            }\n  \n            ival = datasets[i].data[idx];\n            minVal = minVal < ival ? minVal : ival;\n            maxVal = maxVal > ival ? maxVal : ival;\n  \n            if (val > minVal && val < maxVal) {\n              return 'center';\n            }\n          }\n  \n          return val <= minVal ? 'right' : 'end';\n        }\n      }\n    },\n    annotation: {\n      annotations: [\n      ],\n    },\n    layout: {\n    },\n    legend: {\n      display: true,\n      // labels:{\n      //   generateLabels: (chart) => {\n      //     chart.legend.afterFit = function () {\n      //       // this.height = this.height + 10;\n      //     }\n      //   }\n      // }\n    }\n  };\n  \n  public lineChartColors: Color[] = [\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#DA075F',\n      pointBackgroundColor: '#DA075F',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#DA075F'\n    },\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#006300',\n      pointBackgroundColor: '#006300',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#006300'\n    }\n  ];\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n  public lineChartPlugins = [pluginAnnotations];\n\n  constructor(\n    private commonService: CommonService\n  ) {\n      this.commonService.selectedCountry$.subscribe((countryIndex) => {\n      this.recoveryActualMonthlyCases = [];\n      this.recoveryPredictionsMonthlyCases = [];\n      this.lineChartLabels = [];\n      this.activeMonthlyDataIndexes = [];\n      \n      this.selectedCountryIndex = countryIndex;\n      this.readPredictionData();\n\n      this.lineChartData = [\n        { data: this.recoveryActualMonthlyCases, label: 'Actual Data' },\n        { data: this.recoveryPredictionsMonthlyCases, label: 'Prediction Data' }\n      ];\n      // console.log(this.recoveryActualMonthlyCases, this.recoveryPredictionsMonthlyCases);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n\n  private readPredictionData() {\n    const selectedCountryName = CountryIndexPair[this.selectedCountryIndex].toLowerCase();\n    import(`../../../../../data/predictions/${selectedCountryName}/recovery-data.json`)\n    .then(data => {\n      // JUST USE THE LIBRARY\n      this.recoveryPredictionsData = data.default;\n      this.getRecoveryActualMonthlyData();\n      this.getRecoveryPredictiveMonthlyData();  \n      this.getMinMaxXValue();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n\n  // get monthly recovery-actual data\n  private getRecoveryActualMonthlyData() {\n    let count = 0;\n    let actualTotalCount = 0;\n    let PredictiveTotalCount = 0;\n    for(let i = 0; i < this.recoveryActualData[`${this.selectedCountryIndex}`].data.length; i++) {     \n      if (i === 0 || count === 30 || i === this.recoveryActualData[`${this.selectedCountryIndex}`].data.length - 1) {\n        actualTotalCount = parseInt(this.recoveryActualData[`${this.selectedCountryIndex}`].data[i].count, 10);          \n        this.recoveryActualMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n        this.activeMonthlyDataIndexes.push(i);\n        count = 0;\n        actualTotalCount = 0;\n      }  \n      count++;\n    }\n\n  }\n\n\n  // get monthly recovery-prediction data\n  private getRecoveryPredictiveMonthlyData() {   \n    let actualTotalCount = 0;\n    let PredictiveTotalCount = 0;\n    for(let i = 0; i < Object.keys(this.recoveryPredictionsData).length; i++) {      \n      if (this.activeMonthlyDataIndexes.indexOf(i) > -1 || i === Object.keys(this.recoveryPredictionsData).length - 1) {\n        actualTotalCount = parseInt(this.recoveryPredictionsData[i]['Scored Labels'], 10)\n        this.recoveryPredictionsMonthlyCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n        this.lineChartLabels.push(this.commonService.addDays(new Date('01-22-2020'), parseInt(this.recoveryPredictionsData[i].Date, 10)));\n        actualTotalCount = 0;\n      }  \n    }\n    console.log(this.activeMonthlyDataIndexes, this.lineChartLabels);\n  }\n\n\n  private getMinMaxXValue() {\n    this.minYaxisRecoveryActualData = this.commonService.getMinimumValue(this.recoveryActualMonthlyCases);\n    this.maxYaxisRecoveryActualData = this.commonService.getMaximumValue(this.recoveryActualMonthlyCases);\n\n    this.minYaxisRecoveryPredictionData = this.commonService.getMinimumValue(this.recoveryPredictionsMonthlyCases);\n    this.maxYaxisRecoveryPredictionData = this.commonService.getMaximumValue(this.recoveryPredictionsMonthlyCases);\n\n    this.minYaxis = this.minYaxisRecoveryActualData < this.minYaxisRecoveryPredictionData ? this.minYaxisRecoveryActualData : this.minYaxisRecoveryPredictionData;\n\n    this.maxYaxis = this.maxYaxisRecoveryActualData > this.maxYaxisRecoveryPredictionData ? this.maxYaxisRecoveryActualData : this.maxYaxisRecoveryPredictionData;\n    // console.log(this.minYaxisRecoveryActualData, this.minYaxisRecoveryPredictionData, 'min = ', this.minYaxis);\n    // console.log(this.maxYaxisRecoveryActualData, this.maxYaxisRecoveryPredictionData, 'max = ', this.maxYaxis);\n  }\n\n}\n","module.exports = \"<div class=\\\"d-block\\\">\\n  <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n    [datasets]=\\\"lineChartData\\\"\\n    [labels]=\\\"lineChartLabels\\\"\\n    [options]=\\\"lineChartOptions\\\"\\n    [colors]=\\\"lineChartColors\\\"\\n    [legend]=\\\"lineChartLegend\\\"\\n    [chartType]=\\\"lineChartType\\\"\\n    [plugins]=\\\"lineChartPlugins\\\"></canvas>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table mt-3 table-condensed table-hover table-bordered\\\">\\n    <thead>\\n    <tr>\\n      <th *ngFor=\\\"let label of lineChartLabels\\\">{{label}}</th>\\n    </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let d of lineChartData; let i=index\\\" [class]=\\\"'line-'+i\\\">\\n      <td *ngFor=\\\"let label of lineChartLabels; let j=index\\\">{{d && d.data[j] | number}}</td>\\n    </tr>\\n  </table>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RlbW9QYWdlcy9EYXNoYm9hcmRzL2NoYXJ0cy90b3AtdGhyZWUtY291bnRyaWVzLWNvbmZpcm1lZC1jYXNlcy90b3AtdGhyZWUtY291bnRyaWVzLWNvbmZpcm1lZC1jYXNlcy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport confirmedActualData from '../../../../../data/actual/confirmed-data.json';\nimport { CommonService } from '../../../../services/common.service';\nimport { Label, Color } from 'ng2-charts';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\n\n@Component({\n  selector: 'app-top-three-countries-confirmed-cases',\n  templateUrl: './top-three-countries-confirmed-cases.component.html',\n  styleUrls: ['./top-three-countries-confirmed-cases.component.sass']\n})\nexport class TopThreeCountriesConfirmedCasesComponent implements OnInit {\n\n  // all data\n  private confirmedActualData: any = confirmedActualData;  \n\n  // monthly data\n  private confirmedActualDataFirstCases: any;\n  private confirmedActualDataSecondCases: any;\n  private confirmedActualDataThirdCases: any;\n  private confirmedActualDataChinaCases: any;\n  private confirmedActualDataIndiaCases: any;\n\n  // selected country\n  private firstCountryIndex;\n  private secondCountryIndex;\n  private thirdCountryIndex;\n  private chinaIndex;\n  private indiaIndex;\n\n\n  private minYaxisForFirstCases: number; // top most country\n  private maxYaxisForFirstCases: number; // top most country\n  private minYaxisForSecondCases: number; // second top most country\n  private maxYaxisForSecondCases: number; // secondtop most country\n  private minYaxisForThirdCases: number; //  third top most country\n  private maxYaxisForThirdCases: number; // third top most country\n  private minYaxisForChinaCases: number; // top most country\n  private maxYaxisForChinaCases: number; // top most country\n  private minYaxisForIndiaCases: number; // top most country\n  private maxYaxisForIndiaCases: number; // top most country\n  private minYaxis: number;\n  private maxYaxis: number;\n\n  // chart data\n  public lineChartLabels: Label[];\n  public lineChartData: ChartDataSets[];\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    scales: {\n      // We use this empty structure as a placeholder for dynamic theming.\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Over Time',\n            fontColor: '#F74300'\n          },            \n          ticks: {\n            fontColor: '#979797'\n          }\n        }\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Confirmed Cases',\n            fontColor: '#F74300'\n          },\n          gridLines: {\n            color: '#dcd7d7',\n          },            \n          ticks: {\n            fontColor: '#979797',\n            max : this.minYaxis,\n            min:  this.minYaxis,\n            stepSize: Math.round((this.minYaxis - this.minYaxis) / 5)\n          }\n        }\n      ]\n    },\n    elements : { \n      line : { \n        tension : 0.5,\n        borderWidth: 1\n      }\n    },\n    plugins: {\n      datalabels: {\n        font: {\n          size: 11,\n          weight: 'bold',\n        },\n        offset: 3,\n        padding: {\n          left: 10\n        },\n        align: function(ctx) {\n          let idx = ctx.dataIndex;\n          let val = ctx.dataset.data[idx];\n          let datasets = ctx.chart.data.datasets;\n          let minVal = val;\n          let maxVal = val;\n          let i, ilen, ival;\n  \n          for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n            if (i === ctx.datasetIndex) {\n              continue;\n            }\n  \n            ival = datasets[i].data[idx];\n            minVal = minVal < ival ? minVal : ival;\n            maxVal = maxVal > ival ? maxVal : ival;\n  \n            if (val > minVal && val < maxVal) {\n              return 'center';\n            }\n          }\n  \n          return val <= minVal ? 'right' : 'end';\n        }\n      }\n    },\n    annotation: {\n      annotations: [\n      ],\n    },\n    layout: {\n    },\n    legend: {\n      display: true,\n      \n      // labels:{\n      //   generateLabels: (chart) => {\n      //     chart.legend.afterFit = function () {\n      //       // this.height = this.height + 10;\n      //     }\n      //   }\n      // }\n    }\n  };\n  \n  public lineChartColors: Color[] = [\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#006300',\n      pointBackgroundColor: '#006300',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#006300'\n    },\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#0000FF',\n      pointBackgroundColor: '#0000FF',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#0000FF',\n      hoverBackgroundColor: '#0000FF'\n    },\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#C311A4',\n      pointBackgroundColor: '#C311A4',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#C311A4'\n    },\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#EE9801',\n      pointBackgroundColor: '#EE9801',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#EE9801'\n    },\n    { \n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#4E001F',\n      pointBackgroundColor: '#4E001F',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#4E001F'\n    }\n  ];\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n  public lineChartPlugins = [pluginAnnotations];\n\n  \n\n\n\n  constructor(\n    private commonService: CommonService\n  ) {\n    this.commonService.selectedCountry$.subscribe((countryIndex) => {\n      this.confirmedActualDataFirstCases = [];\n      this.confirmedActualDataSecondCases = [];\n      this.confirmedActualDataThirdCases = [];\n      this.confirmedActualDataChinaCases = [];\n      this.confirmedActualDataIndiaCases = [];\n      this.lineChartLabels = [];\n      \n      this.firstCountryIndex = 1; //USA\n      this.secondCountryIndex = 2; // Spain\n      this.thirdCountryIndex = 3; // Italy\n      this.chinaIndex = 41; // China\n      this.indiaIndex = 4; // India\n\n\n      this.getConfirmedActualMonthlyDataFirst();\n      this.getConfirmedActualMonthlyDataSecond();\n      this.getConfirmedActualMonthlyDataThird();\n      this.getConfirmedActualMonthlyDataChina();\n      this.getConfirmedActualMonthlyDataIndia();\n      this.getMinMaxXValue();\n\n      \n\n      this.lineChartData = [\n        { data: this.confirmedActualDataFirstCases, label: 'USA' },\n        { data: this.confirmedActualDataSecondCases, label: 'Spain' },\n        { data: this.confirmedActualDataThirdCases, label: 'Italy' },\n        { data: this.confirmedActualDataChinaCases, label: 'China' },\n        { data: this.confirmedActualDataIndiaCases, label: 'India' }\n      ];\n\n      // console.log(this.lineChartData);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n\n    // get monthly confirmed-actual data for top most infected country\n    private getConfirmedActualMonthlyDataFirst() {\n      let count = 0;\n      let actualTotalCount = 0;\n      let PredictiveTotalCount = 0;\n      for(let i = 0; i < this.confirmedActualData[`${this.firstCountryIndex}`].data.length; i++) {     \n        if (i === 0 || count === 30 || i === this.confirmedActualData[`${this.firstCountryIndex}`].data.length - 1) {\n          actualTotalCount = parseInt(this.confirmedActualData[`${this.firstCountryIndex}`].data[i].count, 10);          \n          this.confirmedActualDataFirstCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n          count = 0;\n          actualTotalCount = 0;\n        }  \n        count++;\n      }\n\n    }\n\n    // get monthly confirmed-actual data for second top most infected country\n    private getConfirmedActualMonthlyDataSecond() {\n      let count = 0;\n      let actualTotalCount = 0;\n      let PredictiveTotalCount = 0;\n      for(let i = 0; i < this.confirmedActualData[`${this.secondCountryIndex}`].data.length; i++) {     \n        if (i === 0 || count === 30 || i === this.confirmedActualData[`${this.secondCountryIndex}`].data.length - 1) {\n          actualTotalCount = parseInt(this.confirmedActualData[`${this.secondCountryIndex}`].data[i].count, 10);          \n          this.confirmedActualDataSecondCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n          count = 0;\n          actualTotalCount = 0;\n        }  \n        count++;\n      }\n\n    }\n\n\n    // get monthly confirmed-actual data for third top most infected country\n    private getConfirmedActualMonthlyDataThird() {\n      let count = 0;\n      let actualTotalCount = 0;\n      let PredictiveTotalCount = 0;\n      for(let i = 0; i < this.confirmedActualData[`${this.thirdCountryIndex}`].data.length; i++) {     \n        if (i === 0 || count === 30 || i === this.confirmedActualData[`${this.thirdCountryIndex}`].data.length - 1) {\n          actualTotalCount = parseInt(this.confirmedActualData[`${this.thirdCountryIndex}`].data[i].count, 10);          \n          this.confirmedActualDataThirdCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n          this.lineChartLabels.push(this.confirmedActualData[`${this.thirdCountryIndex}`].data[i].date);\n          count = 0;\n          actualTotalCount = 0;\n        }  \n        count++;\n      }\n\n    }\n\n    // get monthly confirmed-actual data for China\n    private getConfirmedActualMonthlyDataChina() {\n      let count = 0;\n      let actualTotalCount = 0;\n      let PredictiveTotalCount = 0;\n      for(let i = 0; i < this.confirmedActualData[`${this.chinaIndex}`].data.length; i++) {     \n        if (i === 0 || count === 30 || i === this.confirmedActualData[`${this.chinaIndex}`].data.length - 1) {\n          actualTotalCount = parseInt(this.confirmedActualData[`${this.chinaIndex}`].data[i].count, 10);          \n          this.confirmedActualDataChinaCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n          count = 0;\n          actualTotalCount = 0;\n        }  \n        count++;\n      }\n\n    }\n\n    // get monthly confirmed-actual data for india\n    private getConfirmedActualMonthlyDataIndia() {\n      let count = 0;\n      let actualTotalCount = 0;\n      let PredictiveTotalCount = 0;\n      for(let i = 0; i < this.confirmedActualData[`${this.indiaIndex}`].data.length; i++) {     \n        if (i === 0 || count === 30 || i === this.confirmedActualData[`${this.indiaIndex}`].data.length - 1) {\n          actualTotalCount = parseInt(this.confirmedActualData[`${this.indiaIndex}`].data[i].count, 10);          \n          this.confirmedActualDataIndiaCases.push(actualTotalCount >= 0 ? actualTotalCount : 0);\n          count = 0;\n          actualTotalCount = 0;\n        }  \n        count++;\n      }\n\n    }\n  \n    private getMinMaxXValue() {\n      this.minYaxisForFirstCases = this.commonService.getMinimumValue(this.confirmedActualDataFirstCases);\n      this.maxYaxisForFirstCases = this.commonService.getMaximumValue(this.confirmedActualDataFirstCases);\n\n      this.minYaxisForSecondCases = this.commonService.getMinimumValue(this.confirmedActualDataSecondCases);\n      this.maxYaxisForSecondCases = this.commonService.getMaximumValue(this.confirmedActualDataSecondCases);\n\n      this.minYaxisForThirdCases = this.commonService.getMinimumValue(this.confirmedActualDataThirdCases);\n      this.maxYaxisForThirdCases = this.commonService.getMaximumValue(this.confirmedActualDataThirdCases);\n\n      this.minYaxisForChinaCases = this.commonService.getMinimumValue(this.confirmedActualDataChinaCases);\n      this.maxYaxisForChinaCases = this.commonService.getMaximumValue(this.confirmedActualDataChinaCases);\n\n      this.minYaxisForIndiaCases = this.commonService.getMinimumValue(this.confirmedActualDataIndiaCases);\n      this.maxYaxisForIndiaCases = this.commonService.getMaximumValue(this.confirmedActualDataIndiaCases);\n\n      this.minYaxis = Math.min(this.minYaxisForFirstCases, this.minYaxisForSecondCases, \n                                this.minYaxisForThirdCases, \n                                this.minYaxisForChinaCases,\n                                this.minYaxisForIndiaCases);\n      this.maxYaxis = Math.max(this.maxYaxisForFirstCases, this.maxYaxisForSecondCases, \n                                this.maxYaxisForThirdCases,\n                                this.maxYaxisForChinaCases,\n                                this.maxYaxisForIndiaCases\n                            );\n      // console.log(this.minYaxisForFirstCases, this.minYaxisForSecondCases, this.minYaxisForThirdCases, 'min = ', this.minYaxis);\n      // console.log(this.maxYaxisForFirstCases, this.maxYaxisForSecondCases, this.maxYaxisForThirdCases, 'max = ', this.maxYaxis);\n    }\n\n}\n","module.exports = \"<div class=\\\"app-footer\\\">\\r\\n  <div class=\\\"app-footer__inner\\\">\\r\\n    <div class=\\\"app-footer-left\\\">\\r\\n      <span class=\\\"pl-2\\\">Copyright 2020 - Ethicalhacker</span>\\r\\n    </div>\\r\\n    <div class=\\\"app-footer-right\\\">\\r\\n      <!-- <a class=\\\"btn btn-sm btn-primary mr-2\\\" href=\\\"https://dashboardpack.com\\\">Homepage</a> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"search-wrapper\\\" [class.active]=\\\"isActive\\\">\\r\\n  <div class=\\\"input-holder\\\">\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Type to search\\\" class=\\\"search-input\\\">\\r\\n    <button class=\\\"search-icon\\\" (click)=\\\"isActive = true\\\"><span></span></button>\\r\\n  </div>\\r\\n  <button class=\\\"close\\\" (click)=\\\"isActive = false\\\"></button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-box',\r\n  templateUrl: './search-box.component.html',\r\n})\r\nexport class SearchBoxComponent implements OnInit {\r\n\r\n  public isActive: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"d-flex\\\">\\r\\n  <div class=\\\"header-btn-lg pr-0\\\">\\r\\n    <div class=\\\"widget-content p-0\\\">\\r\\n      <div class=\\\"widget-content-wrapper\\\">\\r\\n        <div class=\\\"widget-content-left\\\">\\r\\n          <div class=\\\"btn-group\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-link p-0 mr-2\\\" ngbDropdownToggle>\\r\\n              <span>\\r\\n                <div class=\\\"icon-wrapper icon-wrapper-alt rounded-circle\\\">\\r\\n                  <img width=\\\"42\\\" src=\\\"./assets/images/avatars/1.jpg\\\" alt=\\\"\\\" class=\\\"rounded-circle\\\">\\r\\n                </div>\\r\\n              </span>\\r\\n            </button>\\r\\n            <div ngbDropdownMenu>\\r\\n              <button class=\\\"dropdown-item\\\">Menus</button>\\r\\n              <button class=\\\"dropdown-item\\\">Settings</button>\\r\\n              <h6 class=\\\"dropdown-header\\\">Header</h6>\\r\\n              <button class=\\\"dropdown-item\\\">Actions</button>\\r\\n              <div class=\\\"dropdown-divider\\\"></div>\\r\\n              <button class=\\\"dropdown-item\\\">Dividers</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ThemeOptions} from '../../../../../theme-options';\r\n\r\n@Component({\r\n  selector: 'app-user-box',\r\n  templateUrl: './user-box.component.html',\r\n})\r\nexport class UserBoxComponent implements OnInit {\r\n\r\n  constructor(public globals: ThemeOptions) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [class]=\\\"'app-header header-shadow ' + (config$ | async).headerTheme\\\">\\r\\n  <div class=\\\"logo-src\\\"></div>\\r\\n  <div class=\\\"app-header__content\\\">\\r\\n    <div class=\\\"app-header-right\\\">\\r\\n      <h2>Tracker & Prediction</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"app-header__mobile-menu\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"hamburger close-sidebar-btn hamburger--elastic\\\"\\r\\n            [ngClass]=\\\"{'is-active' : globals.toggleSidebarMobile}\\\" (click)=\\\"toggleSidebarMobile()\\\">\\r\\n        <span class=\\\"hamburger-box\\\">\\r\\n            <span class=\\\"hamburger-inner\\\"></span>\\r\\n        </span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"app-header__menu\\\">\\r\\n    <span>\\r\\n        <button class=\\\"btn-icon btn-icon-only btn btn-primary\\\" [ngClass]=\\\"{'is-active' : globals.toggleHeaderMobile}\\\"\\r\\n                (click)=\\\"toggleHeaderMobile()\\\">\\r\\n            <div class=\\\"btn-icon-wrapper\\\">\\r\\n                <fa name=\\\"ellipsis-v\\\"></fa>\\r\\n            </div>\\r\\n        </button>\\r\\n    </span>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, HostBinding} from '@angular/core';\r\nimport {select} from '@angular-redux/store';\r\nimport {Observable} from 'rxjs';\r\nimport {ThemeOptions} from '../../../theme-options';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n})\r\nexport class HeaderComponent {\r\n\r\n  constructor(public globals: ThemeOptions) {\r\n  }\r\n\r\n  @HostBinding('class.isActive')\r\n  get isActiveAsGetter() {\r\n    return this.isActive;\r\n  }\r\n\r\n  isActive: boolean;\r\n\r\n  @select('config') public config$: Observable<any>;\r\n\r\n  toggleSidebarMobile() {\r\n    this.globals.toggleSidebarMobile = !this.globals.toggleSidebarMobile;\r\n  }\r\n\r\n  toggleHeaderMobile() {\r\n    this.globals.toggleHeaderMobile = !this.globals.toggleHeaderMobile;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"app-page-title\\\">\\r\\n  <div class=\\\"page-title-wrapper\\\">\\r\\n    <div class=\\\"page-title-heading\\\">\\r\\n      <div class=\\\"page-title-icon\\\">\\r\\n        <i class=\\\"icon {{icon}}\\\"></i>\\r\\n      </div>\\r\\n      <div>\\r\\n        {{heading}}\\r\\n        <div\\r\\n          class=\\\"page-title-subheading\\\">\\r\\n          {{subheading}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"page-title-actions\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn-shadow mr-3 btn btn-dark\\\">\\r\\n        <fa name=\\\"star\\\"></fa>\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn-shadow d-inline-flex align-items-center btn btn-success\\\">\\r\\n        <fa class=\\\"mr-2\\\" name=\\\"plus\\\"></fa>\\r\\n        Create New\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-title',\r\n  templateUrl: './page-title.component.html',\r\n})\r\nexport class PageTitleComponent {\r\n\r\n  @Input() heading;\r\n  @Input() subheading;\r\n  @Input() icon;\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  logo works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logo',\r\n  templateUrl: './logo.component.html',\r\n})\r\nexport class LogoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [class]=\\\"'app-sidebar sidebar-shadow ' + (config$ | async).sidebarTheme\\\" (mouseover)=\\\"sidebarHover()\\\"\\r\\n     (mouseout)=\\\"sidebarHover()\\\">\\r\\n  <div class=\\\"app-header__logo\\\">\\r\\n    <div class=\\\"logo-src\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"app-sidebar-content\\\">\\r\\n    <div class=\\\"app-sidebar-scroll\\\">\\r\\n      <perfect-scrollbar [autoPropagation]=\\\"true\\\">\\r\\n        <div class=\\\"v-sidebar-menu vsm-default\\\">\\r\\n          <h4 class=\\\"mt-5\\\"> Global Count</h4>\\r\\n          <div class=\\\"vsm-list\\\">\\r\\n            <!-- ///////////////////// -->\\r\\n            <div class=\\\"col-sm-6 col-md-3 col-xl-3\\\">\\r\\n              <div class=\\\"card no-shadow rm-border bg-transparent widget-chart text-left\\\">\\r\\n                <div class=\\\"icon-wrapper rounded-circle\\\">\\r\\n                  <div class=\\\"icon-wrapper-bg opacity-10 bg-yellow\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-chart-content\\\">\\r\\n                  <div class=\\\"widget-subheading\\\">Active cases</div>\\r\\n                  <div class=\\\"widget-numbers small-font\\\">{{globalActiveCases | number}}</div>\\r\\n                  <div class=\\\"widget-description opacity-8 text-focus\\\">\\r\\n                    <div class=\\\"d-inline text-danger pr-1\\\">\\r\\n                      <fa name=\\\"angle-down\\\"></fa>\\r\\n                      <span class=\\\"pl-1\\\">\\r\\n                        {{(globalActiveCases / globalPopulation) * 100 | number : '1.2-2'}}%\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"divider m-0 d-md-none d-sm-block\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 col-md-3 col-xl-3\\\">\\r\\n              <div class=\\\"card no-shadow rm-border bg-transparent widget-chart text-left\\\">\\r\\n                <div class=\\\"icon-wrapper rounded-circle\\\">\\r\\n                  <div class=\\\"icon-wrapper-bg opacity-10 bg-warning\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-chart-content\\\">\\r\\n                  <div class=\\\"widget-subheading\\\">Confirmed cases</div>\\r\\n                  <div class=\\\"widget-numbers small-font\\\">{{globalConfirmedCases | number}}</div>\\r\\n                  <div class=\\\"widget-description opacity-8 text-focus\\\">\\r\\n                    <div class=\\\"d-inline text-danger pr-1\\\">\\r\\n                      <fa name=\\\"angle-down\\\"></fa>\\r\\n                      <span class=\\\"pl-1\\\">\\r\\n                        {{(globalConfirmedCases / globalPopulation) * 100 | number : '1.2-2'}}%\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"divider m-0 d-md-none d-sm-block\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 col-md-3 col-xl-3\\\">\\r\\n              <div class=\\\"card no-shadow rm-border bg-transparent widget-chart text-left\\\">\\r\\n                <div class=\\\"icon-wrapper rounded-circle\\\">\\r\\n                  <div class=\\\"icon-wrapper-bg opacity-9 bg-success\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-chart-content\\\">\\r\\n                  <div class=\\\"widget-subheading\\\">Recovered cases</div>\\r\\n                  <div class=\\\"widget-numbers small-font\\\"><span>{{globalRecoveredCases | number}}</span></div>\\r\\n                  <div class=\\\"widget-description opacity-8 text-focus\\\">\\r\\n                    <span class=\\\"text-info pl-1\\\">\\r\\n                        <fa name=\\\"angle-down\\\"></fa>\\r\\n                        <span class=\\\"pl-1\\\">\\r\\n                          {{(globalRecoveredCases / globalConfirmedCases) * 100 | number : '1.2-2'}}%\\r\\n                        </span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"divider m-0 d-md-none d-sm-block\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-md-3 col-xl-3\\\">\\r\\n              <div class=\\\"card no-shadow rm-border bg-transparent widget-chart text-left\\\">\\r\\n                <div class=\\\"icon-wrapper rounded-circle\\\">\\r\\n                  <div class=\\\"icon-wrapper-bg opacity-9 bg-danger\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-chart-content\\\">\\r\\n                  <div class=\\\"widget-subheading\\\">Fatal cases</div>\\r\\n                  <div class=\\\"widget-numbers small-font\\\"><span>{{globalDeathCases | number}}</span></div>\\r\\n                  <div class=\\\"widget-description text-focus\\\">\\r\\n                    <span class=\\\"text-warning pl-1\\\">\\r\\n                        <fa name=\\\"angle-up\\\"></fa>\\r\\n                        <span class=\\\"pl-1\\\">\\r\\n                          {{(globalDeathCases / globalConfirmedCases) * 100 | number : '1.2-2'}}%\\r\\n                        </span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </perfect-scrollbar>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, HostListener, OnInit} from '@angular/core';\r\nimport {ThemeOptions} from '../../../theme-options';\r\nimport {select} from '@angular-redux/store';\r\nimport {Observable} from 'rxjs';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport activeData from '../../../../data/actual/active-data.json';\r\nimport confirmedData from '../../../../data/actual/confirmed-data.json';\r\nimport deathsData from '../../../../data/actual/deaths-data.json';\r\nimport recoveredData from '../../../../data/actual/recovery-data.json';\r\nimport countryDataset from '../../../../data/countries-dataset.json';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  public extraParameter: any;\r\n  public country: any;\r\n  public ASSETS_PATH = './assets';\r\n  public globalActiveCases: number;\r\n  public globalConfirmedCases: number;\r\n  public globalDeathCases: number;\r\n  public globalRecoveredCases: number;\r\n  public globalPopulation: number;\r\n\r\n  constructor(\r\n    public globals: ThemeOptions, \r\n    private activatedRoute: ActivatedRoute,\r\n    private commonService: CommonService\r\n  ) { \r\n  }\r\n\r\n  public countryChange() {\r\n\r\n  }\r\n\r\n  @select('config') public config$: Observable<any>;\r\n\r\n  private newInnerWidth: number;\r\n  private innerWidth: number;\r\n  activeId = 'dashboardsMenu';\r\n\r\n  toggleSidebar() {\r\n    this.globals.toggleSidebar = !this.globals.toggleSidebar;\r\n  }\r\n\r\n  sidebarHover() {\r\n    this.globals.sidebarHover = !this.globals.sidebarHover;\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.innerWidth = window.innerWidth;\r\n      if (this.innerWidth < 1200) {\r\n        this.globals.toggleSidebar = true;\r\n      }\r\n    });\r\n\r\n    this.extraParameter = this.activatedRoute.snapshot.firstChild.data.extraParameter;\r\n\r\n    \r\n    this.globalActiveCases = this.getGlobalActiveCases();\r\n    this.globalConfirmedCases = this.getGlobalConfirmedCases();\r\n    this.globalDeathCases = this.getGlobalDeathCases();\r\n    this.globalRecoveredCases = this.getGlobalRecoveredCases();\r\n    this.globalPopulation = countryDataset[0].population;;\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.newInnerWidth = event.target.innerWidth;\r\n\r\n    if (this.newInnerWidth < 1200) {\r\n      this.globals.toggleSidebar = true;\r\n    } else {\r\n      this.globals.toggleSidebar = false;\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  // Global total active cases\r\n  private getGlobalActiveCases(): number {\r\n    let lastdayIndex = activeData[0].data.length - 1;\r\n    return activeData[0].data[lastdayIndex].count;\r\n  }\r\n\r\n  // Global total confirmed cases\r\n  private getGlobalConfirmedCases(): number {\r\n    let lastdayIndex = confirmedData[0].data.length - 1;\r\n    return confirmedData[0].data[lastdayIndex].count;\r\n  }\r\n\r\n  // Global total death cases\r\n  private getGlobalDeathCases(): number {\r\n    let lastdayIndex = deathsData[0].data.length - 1;\r\n    return deathsData[0].data[lastdayIndex].count;\r\n  }\r\n\r\n  // Global total recovery cases\r\n  private getGlobalRecoveredCases(): number {\r\n    let lastdayIndex = recoveredData[0].data.length - 1;\r\n    return recoveredData[0].data[lastdayIndex].count;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [ngClass]=\\\"{\\r\\n'closed-sidebar' : globals.toggleSidebar,\\r\\n'closed-sidebar-md' : globals.toggleSidebarMobile,\\r\\n'closed-sidebar-open': globals.sidebarHover || globals.toggleSidebarMobile,\\r\\n'header-menu-open' : globals.toggleHeaderMobile,\\r\\n'fixed-footer' : globals.toggleFixedFooter\\r\\n}\\\" [class]=\\\"'app-container app-theme-white'\\\">\\r\\n  <app-header></app-header>\\r\\n  <app-sidebar></app-sidebar>\\r\\n  <div class=\\\"app-main__outer\\\">\\r\\n    <div class=\\\"app-main__inner\\\">\\r\\n      <div [@architectUIAnimation]=\\\"o.isActivated ? o.activatedRoute : ''\\\">\\r\\n        <router-outlet #o=\\\"outlet\\\"></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n    <app-footer></app-footer>\\r\\n  </div>\\r\\n  <div class=\\\"sidebar-menu-overlay\\\" (click)=\\\"toggleSidebarMobile()\\\"></div>\\r\\n</div>\\r\\n<ngx-loading-bar [color]=\\\"'var(--primary)'\\\"></ngx-loading-bar>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {select} from '@angular-redux/store';\r\nimport {Observable} from 'rxjs';\r\nimport {ConfigActions} from '../../ThemeOptions/store/config.actions';\r\nimport {ThemeOptions} from '../../theme-options';\r\nimport {animate, query, style, transition, trigger} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-base-layout',\r\n  templateUrl: './base-layout.component.html',\r\n  animations: [\r\n\r\n    trigger('architectUIAnimation', [\r\n      transition('* <=> *', [\r\n        query(':enter, :leave', [\r\n          style({\r\n            opacity: 0,\r\n            display: 'flex',\r\n            flex: '1',\r\n            transform: 'translateY(-20px)',\r\n            flexDirection: 'column'\r\n\r\n          }),\r\n        ]),\r\n        query(':enter', [\r\n          animate('600ms ease', style({opacity: 1, transform: 'translateY(0)'})),\r\n        ]),\r\n\r\n        query(':leave', [\r\n          animate('600ms ease', style({opacity: 0, transform: 'translateY(-20px)'})),\r\n         ], { optional: true })\r\n      ]),\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class BaseLayoutComponent {\r\n\r\n  @select('config') public config$: Observable<any>;\r\n\r\n  constructor(public globals: ThemeOptions, public configActions: ConfigActions) {\r\n  }\r\n\r\n  toggleSidebarMobile() {\r\n    this.globals.toggleSidebarMobile = !this.globals.toggleSidebarMobile;\r\n  }\r\n}\r\n\r\n\r\n\r\n","module.exports = \"<div [@architectUIAnimation]=\\\"o.isActivated ? o.activatedRoute : ''\\\">\\r\\n  <router-outlet #o=\\\"outlet\\\"></router-outlet>\\r\\n</div>\\r\\n<ngx-loading-bar [color]=\\\"'var(--primary)'\\\"></ngx-loading-bar>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {animate, query, style, transition, trigger} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-pages-layout',\r\n  templateUrl: './pages-layout.component.html',\r\n  animations: [\r\n\r\n    trigger('architectUIAnimation', [\r\n      transition('* <=> *', [\r\n        query(':enter, :leave', [\r\n          style({\r\n            opacity: 0,\r\n            display: 'flex',\r\n            flex: '1',\r\n            flexDirection: 'column'\r\n\r\n          }),\r\n        ]),\r\n        query(':enter', [\r\n          animate('600ms ease', style({opacity: 1})),\r\n        ]),\r\n\r\n        query(':leave', [\r\n          animate('600ms ease', style({opacity: 0})),\r\n        ], {optional: true})\r\n      ]),\r\n    ])\r\n  ]\r\n})\r\nexport class PagesLayoutComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ArchitectUIState } from './index';\r\nimport { NgRedux } from '@angular-redux/store';\r\n\r\n@Injectable()\r\nexport class ConfigActions {\r\n  static CONFIG_GET = 'CONFIG_GET';\r\n  static CONFIG_UPDATE = 'CONFIG_UPDATE';\r\n\r\n  constructor(\r\n    private ngRedux: NgRedux<ArchitectUIState>,\r\n  ) { }\r\n\r\n  getConfig() {\r\n    this.ngRedux.dispatch({\r\n      type: ConfigActions.CONFIG_GET,\r\n    });\r\n  }\r\n\r\n  updateConfig(config): void {\r\n    this.ngRedux.dispatch({\r\n      type: ConfigActions.CONFIG_UPDATE,\r\n      payload: config\r\n    });\r\n  }\r\n\r\n}\r\n","import { ConfigActions } from './config.actions';\r\n\r\nconst INITIAL_STATE = {\r\n  headerTheme:  '',\r\n  sidebarTheme:  '',\r\n}\r\n\r\nexport function ConfigReducer(state = INITIAL_STATE, action: any): any {\r\n\r\n  switch (action.type) {\r\n    case ConfigActions.CONFIG_GET:\r\n      return Object.assign({}, state);\r\n\r\n    case ConfigActions.CONFIG_UPDATE:\r\n      return Object.assign({}, state, {...action.payload});\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { ConfigReducer } from './config.reducer';\r\n\r\nexport class ArchitectUIState {\r\n  config;\r\n};\r\n\r\nexport const rootReducer = combineReducers<ArchitectUIState>({\r\n  config: ConfigReducer,\r\n});\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\n\r\nimport {BaseLayoutComponent} from './Layout/base-layout/base-layout.component';\r\nimport {PagesLayoutComponent} from './Layout/pages-layout/pages-layout.component';\r\n\r\n// DEMO PAGES\r\n\r\n// Dashboards\r\n\r\nimport {AnalyticsComponent} from './DemoPages/Dashboards/analytics/analytics.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BaseLayoutComponent,\r\n    children: [\r\n      // Dashboads\r\n      {path: '', component: AnalyticsComponent, data: {extraParameter: 'dashboardsMenu'}}\r\n    ]\r\n  },\r\n  {path: '**', redirectTo: ''}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,\r\n    {\r\n      scrollPositionRestoration: 'enabled',\r\n      anchorScrolling: 'enabled',\r\n    })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import {Component} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'CTS Covind-19';\r\n  \r\n  constructor() {\r\n  }\r\n\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NgReduxModule} from '@angular-redux/store';\r\nimport {NgRedux, DevToolsExtension} from '@angular-redux/store';\r\nimport {rootReducer, ArchitectUIState} from './ThemeOptions/store';\r\nimport {ConfigActions} from './ThemeOptions/store/config.actions';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {LoadingBarRouterModule} from '@ngx-loading-bar/router';\r\n\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AppComponent} from './app.component';\r\n\r\n// BOOTSTRAP COMPONENTS\r\n\r\nimport {AngularFontAwesomeModule} from 'angular-font-awesome';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\nimport {PERFECT_SCROLLBAR_CONFIG} from 'ngx-perfect-scrollbar';\r\nimport {PerfectScrollbarConfigInterface} from 'ngx-perfect-scrollbar';\r\nimport {ChartsModule} from 'ng2-charts';\r\n\r\n// LAYOUT\r\n\r\nimport {BaseLayoutComponent} from './Layout/base-layout/base-layout.component';\r\nimport {PagesLayoutComponent} from './Layout/pages-layout/pages-layout.component';\r\nimport {PageTitleComponent} from './Layout/Components/page-title/page-title.component';\r\n\r\n// HEADER\r\n\r\nimport {HeaderComponent} from './Layout/Components/header/header.component';\r\nimport {SearchBoxComponent} from './Layout/Components/header/elements/search-box/search-box.component';\r\nimport {UserBoxComponent} from './Layout/Components/header/elements/user-box/user-box.component';\r\n\r\n// SIDEBAR\r\n\r\nimport {SidebarComponent} from './Layout/Components/sidebar/sidebar.component';\r\nimport {LogoComponent} from './Layout/Components/sidebar/elements/logo/logo.component';\r\n\r\n// FOOTER\r\n\r\nimport {FooterComponent} from './Layout/Components/footer/footer.component';\r\n\r\n// DEMO PAGES\r\n\r\n// Dashboards\r\n\r\nimport {AnalyticsComponent} from './DemoPages/Dashboards/analytics/analytics.component';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n/////////\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ConfirmedActualVsConfirmedPredictionsComponent } from './DemoPages/Dashboards/charts/confirmed-actual-vs-confirmed-predictions/confirmed-actual-vs-confirmed-predictions.component';\r\nimport { ConfirmedActualVsDeathActualComponent } from './DemoPages/Dashboards/charts/confirmed-actual-vs-death-actual/confirmed-actual-vs-death-actual.component';\r\nimport { TopThreeCountriesConfirmedCasesComponent } from './DemoPages/Dashboards/charts/top-three-countries-confirmed-cases/top-three-countries-confirmed-cases.component';\r\nimport { DeathActualVsDeathPredictionComponent } from './DemoPages/Dashboards/charts/death-actual-vs-death-prediction/death-actual-vs-death-prediction.component';\r\nimport { RecoveryActualVsRecoveryPredictionComponent } from './DemoPages/Dashboards/charts/recovery-actual-vs-recovery-prediction/recovery-actual-vs-recovery-prediction.component';\r\nimport { ActiveActualVsActivePredictionComponent } from './DemoPages/Dashboards/charts/active-actual-vs-active-prediction/active-actual-vs-active-prediction.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n    // LAYOUT\r\n\r\n    AppComponent,\r\n    BaseLayoutComponent,\r\n    PagesLayoutComponent,\r\n    PageTitleComponent,\r\n\r\n    // HEADER\r\n\r\n    HeaderComponent,\r\n    SearchBoxComponent,\r\n    UserBoxComponent,\r\n\r\n    // SIDEBAR\r\n\r\n    SidebarComponent,\r\n    LogoComponent,\r\n\r\n    // FOOTER\r\n\r\n    FooterComponent,\r\n\r\n    // DEMO PAGES\r\n\r\n    // Dashboards\r\n\r\n    AnalyticsComponent,\r\n    ConfirmedActualVsConfirmedPredictionsComponent,\r\n    ConfirmedActualVsDeathActualComponent,\r\n    TopThreeCountriesConfirmedCasesComponent,\r\n    DeathActualVsDeathPredictionComponent,\r\n    RecoveryActualVsRecoveryPredictionComponent,\r\n    ActiveActualVsActivePredictionComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NgReduxModule,\r\n    CommonModule,\r\n    LoadingBarRouterModule,\r\n\r\n    // Angular Bootstrap Components\r\n\r\n    PerfectScrollbarModule,\r\n    NgbModule,\r\n    AngularFontAwesomeModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n\r\n    // Charts\r\n\r\n    ChartsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide:\r\n      PERFECT_SCROLLBAR_CONFIG,\r\n      // DROPZONE_CONFIG,\r\n      useValue:\r\n      DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n      // DEFAULT_DROPZONE_CONFIG,      \r\n    },\r\n    ConfigActions,\r\n    DatePipe\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {\r\n  constructor(private ngRedux: NgRedux<ArchitectUIState>,\r\n              private devTool: DevToolsExtension) {\r\n\r\n    this.ngRedux.configureStore(\r\n      rootReducer,\r\n      {} as ArchitectUIState,\r\n      [],\r\n      [devTool.isEnabled() ? devTool.enhancer() : f => f]\r\n    );\r\n\r\n  }\r\n}\r\n","export enum CountryIndexPair {\r\n    Global,    \r\n    USA,\r\n    Spain,\r\n    Italy,\r\n    India,\r\n    Afghanistan,\r\n    Albania,\r\n    Algeria,\r\n    Andorra,\r\n    Angola,\r\n    'Antigua and Barbuda',\r\n    Argentina,\r\n    Armenia,\r\n    Australia,\r\n    Austria,\r\n    Azerbaijan,\r\n    Bahamas,\r\n    Bahrain,\r\n    Bangladesh,\r\n    Barbados,\r\n    Belarus,\r\n    Belgium,\r\n    Belize,\r\n    Benin,\r\n    Bhutan,\r\n    Bolivia,\r\n    'Bosnia and Herzegovina',\r\n    Botswana,\r\n    Brazil,\r\n    Brunei,\r\n    Bulgaria,\r\n    'Burkina Faso',\r\n    Burma,\r\n    Burundi,\r\n    'Cabo Verde',\r\n    Cambodia,\r\n    Cameroon,\r\n    Canada,\r\n    'Central African Republic',\r\n    Chad,\r\n    Chile,\r\n    China,\r\n    Colombia,\r\n    'Congo (Brazzaville)',\r\n    'Congo (Kinshasa)',\r\n    'Costa Ric\\'a',\r\n    'Cote d\\'Ivoire',\r\n    Croatia,\r\n    Cuba,\r\n    Cyprus,\r\n    Czechia,\r\n    Denmark,\r\n    'Diamond Princess',\r\n    Djibouti,\r\n    Dominica,\r\n    'Dominican Republic',\r\n    Ecuador,\r\n    Egypt,\r\n    'El Salvador',\r\n    'Equatorial Guinea',\r\n    Eritrea,\r\n    Estonia,\r\n    Eswatini,\r\n    Ethiopia,\r\n    Fiji,\r\n    Finland,\r\n    France,\r\n    Gabon,\r\n    Gambia,\r\n    Georgia,\r\n    Germany,\r\n    Ghana,\r\n    Greece,\r\n    Grenada,\r\n    Guatemala,\r\n    Guinea,\r\n    'Guinea-Bissau',\r\n    Guyana,\r\n    Haiti,\r\n    'Holy See',\r\n    Honduras,\r\n    Hungary,\r\n    Iceland,//\r\n    Indonesia,//\r\n    Iran,\r\n    Iraq,\r\n    Ireland,\r\n    Israel,//\r\n    Jamaica,//\r\n    Japan,\r\n    Jordan,\r\n    Kazakhstan,\r\n    Kenya,\r\n    Korea,\r\n    Kosovo,\r\n    Kuwait,\r\n    Kyrgyzstan,\r\n    Laos,\r\n    Latvia,\r\n    Lebanon,\r\n    Liberia,\r\n    Libya,\r\n    Liechtenstein,\r\n    Lithuania,\r\n    Luxembourg,\r\n    Madagascar,\r\n    Malawi,\r\n    Malaysia,\r\n    Maldives,\r\n    Mali,\r\n    Malta,\r\n    Mauritania,\r\n    Mauritius,\r\n    Mexico,\r\n    Moldova,\r\n    Monaco,\r\n    Mongolia,\r\n    Montenegro,\r\n    Morocco,\r\n    Mozambique,\r\n    'MS Zaandam',\r\n    Namibia,\r\n    Nepal,\r\n    Netherlands,\r\n    'New Zealand',\r\n    Nicaragua,\r\n    Niger,\r\n    Nigeria,\r\n    'North Macedonia',\r\n    Norway,\r\n    Oman,\r\n    Pakistan,\r\n    Panama,\r\n    'Papua New Guinea',\r\n    Paraguay,\r\n    Peru,\r\n    Philippines,\r\n    Poland,\r\n    Portugal,\r\n    Qatar,\r\n    Romania,\r\n    Russia,\r\n    Rwanda,\r\n    'Saint Kitts and Nevis',\r\n    'Saint Lucia',\r\n    'Saint Vincent and the Grenadines',\r\n    'San Marino',\r\n    'Sao Tome and Principe',\r\n    'Saudi Arabia',\r\n    Senegal,\r\n    Serbia,\r\n    Seychelles,\r\n    'Sierra Leone',\r\n    Singapore,\r\n    Slovakia,\r\n    Slovenia,\r\n    Somalia,\r\n    'South Africa',\r\n    'South Sudan',//\r\n    'Sri Lanka',//\r\n    Sudan,\r\n    Suriname,\r\n    Sweden,\r\n    Switzerland,\r\n    Syria,\r\n    Taiwan,\r\n    Tanzania,\r\n    Thailand,\r\n    'Timor-Leste',\r\n    Togo,\r\n    'Trinidad and Tobago',\r\n    Tunisia,\r\n    Turkey,\r\n    Uganda,\r\n    Ukraine,\r\n    'United Arab Emirates',\r\n    'United Kingdom',\r\n    Uruguay,//\r\n    Uzbekistan,//\r\n    Venezuela,\r\n    Vietnam,\r\n    'West Bank and Gaza',\r\n    'Western Sahara',\r\n    Yemen,\r\n    Zambia,\r\n    Zimbabwe,\r\n    // 'USA',\r\n    // 'Spain',\r\n    // 'Italy',\r\n    // 'India'\r\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject  } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  public selectedCountry$: BehaviorSubject <number>;\n\n  constructor() {\n    this.selectedCountry$ = new BehaviorSubject <number>(4);\n  }\n\n  // publish selected country\n  public publishSelectedCountry(countryIndex: any) {\n    if (countryIndex !== undefined) {\n      this.selectedCountry$.next(countryIndex);\n    }    \n  }\n\n  public addDays(dateObj, numDays) {\n    dateObj.setDate(dateObj.getDate() + numDays);\n    let dd = dateObj.getDate();\n    let mm = dateObj.getMonth() + 1;\n    let y = dateObj.getFullYear();\n    return mm + '/'+ dd + '/'+ y;\n  }\n\n\n  public getMinimumValue(data: Array<number>) {\n    const minVal = data.reduce((prev, current) => { \n      return (prev < current) ? prev : current; \n    });\n    return Math.round(minVal);\n  }\n\n  public getMaximumValue(data: Array<number>) {\n    const maxVal = data.reduce((prev, current) => { \n      return (prev > current) ? prev : current; \n    });\n    return Math.round(maxVal);\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeOptions {\r\n  sidebarHover = false;\r\n  toggleSidebar = false;\r\n  toggleSidebarMobile = false;\r\n  toggleHeaderMobile = false;\r\n  toggleFixedFooter = false;\r\n}\r\n","var map = {\n\t\"./china/active-data.json\": [\n\t\t\"./src/data/predictions/china/active-data.json\",\n\t\t0\n\t],\n\t\"./global/active-data.json\": [\n\t\t\"./src/data/predictions/global/active-data.json\",\n\t\t1\n\t],\n\t\"./india/active-data.json\": [\n\t\t\"./src/data/predictions/india/active-data.json\",\n\t\t5\n\t],\n\t\"./italy/active-data.json\": [\n\t\t\"./src/data/predictions/italy/active-data.json\",\n\t\t9\n\t],\n\t\"./spain/active-data.json\": [\n\t\t\"./src/data/predictions/spain/active-data.json\",\n\t\t13\n\t],\n\t\"./usa/active-data.json\": [\n\t\t\"./src/data/predictions/usa/active-data.json\",\n\t\t17\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/data/predictions lazy recursive ^\\\\.\\\\/.*\\\\/active\\\\-data\\\\.json$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./global/confirmed-data.json\": [\n\t\t\"./src/data/predictions/global/confirmed-data.json\",\n\t\t2\n\t],\n\t\"./india/confirmed-data.json\": [\n\t\t\"./src/data/predictions/india/confirmed-data.json\",\n\t\t6\n\t],\n\t\"./italy/confirmed-data.json\": [\n\t\t\"./src/data/predictions/italy/confirmed-data.json\",\n\t\t10\n\t],\n\t\"./spain/confirmed-data.json\": [\n\t\t\"./src/data/predictions/spain/confirmed-data.json\",\n\t\t14\n\t],\n\t\"./usa/confirmed-data.json\": [\n\t\t\"./src/data/predictions/usa/confirmed-data.json\",\n\t\t18\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/data/predictions lazy recursive ^\\\\.\\\\/.*\\\\/confirmed\\\\-data\\\\.json$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./global/death-data.json\": [\n\t\t\"./src/data/predictions/global/death-data.json\",\n\t\t3\n\t],\n\t\"./india/death-data.json\": [\n\t\t\"./src/data/predictions/india/death-data.json\",\n\t\t7\n\t],\n\t\"./italy/death-data.json\": [\n\t\t\"./src/data/predictions/italy/death-data.json\",\n\t\t11\n\t],\n\t\"./spain/death-data.json\": [\n\t\t\"./src/data/predictions/spain/death-data.json\",\n\t\t15\n\t],\n\t\"./usa/death-data.json\": [\n\t\t\"./src/data/predictions/usa/death-data.json\",\n\t\t19\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/data/predictions lazy recursive ^\\\\.\\\\/.*\\\\/death\\\\-data\\\\.json$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./global/recovery-data.json\": [\n\t\t\"./src/data/predictions/global/recovery-data.json\",\n\t\t4\n\t],\n\t\"./india/recovery-data.json\": [\n\t\t\"./src/data/predictions/india/recovery-data.json\",\n\t\t8\n\t],\n\t\"./italy/recovery-data.json\": [\n\t\t\"./src/data/predictions/italy/recovery-data.json\",\n\t\t12\n\t],\n\t\"./spain/recovery-data.json\": [\n\t\t\"./src/data/predictions/spain/recovery-data.json\",\n\t\t16\n\t],\n\t\"./usa/recovery-data.json\": [\n\t\t\"./src/data/predictions/usa/recovery-data.json\",\n\t\t20\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/data/predictions lazy recursive ^\\\\.\\\\/.*\\\\/recovery\\\\-data\\\\.json$\";\nmodule.exports = webpackAsyncContext;","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}